{"version":3,"file":"react.production.min.js","sources":["../../../../packages/shared/ReactVersion.js","../../../../packages/shared/ReactSymbols.js","../../../../packages/react/src/ReactNoopUpdateQueue.js","../../../../packages/shared/assign.js","../../../../packages/react/src/ReactBaseClasses.js","../../../../packages/react/src/ReactCreateRef.js","../../../../packages/shared/isArray.js","../../../../packages/shared/hasOwnProperty.js","../../../../packages/react/src/ReactCurrentOwner.js","../../../../packages/react/src/ReactElement.js","../../../../packages/react/src/ReactChildren.js","../../../../packages/react/src/ReactContext.js","../../../../packages/react/src/ReactLazy.js","../../../../packages/react/src/ReactForwardRef.js","../../../../packages/react/src/ReactMemo.js","../../../../packages/react/src/ReactCurrentDispatcher.js","../../../../packages/react/src/ReactHooks.js","../../../../packages/react/src/ReactCurrentBatchConfig.js","../../../../packages/react/src/ReactServerContextRegistry.js","../../../../packages/react/src/ReactSharedInternals.js","../../../../packages/react/src/ReactServerContext.js","../../../../packages/react/src/ReactStartTransition.js","../../../../packages/react/src/ReactAct.js","../../../../packages/react/src/React.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n// TODO: this is special because it gets imported during build.\r\n//\r\n// TODO: 18.0.0 has not been released to NPM;\r\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\r\n// When we next publish a release, update the matching TODO in backend/renderer.js\r\n// TODO: This module is used both by the release scripts and to expose a version\r\n// at runtime. We should instead inject the version number as part of the build\r\n// process, and use the ReactVersions.js module as the single source of truth.\r\nexport default '18.2.0';\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\n// ATTENTION\r\n// When adding new symbols to this file,\r\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\r\n\r\n// The Symbol used to tag the ReactElement-like types.\r\nexport const REACT_ELEMENT_TYPE: symbol = Symbol.for('react.element');\r\nexport const REACT_PORTAL_TYPE: symbol = Symbol.for('react.portal');\r\nexport const REACT_FRAGMENT_TYPE: symbol = Symbol.for('react.fragment');\r\nexport const REACT_STRICT_MODE_TYPE: symbol = Symbol.for('react.strict_mode');\r\nexport const REACT_PROFILER_TYPE: symbol = Symbol.for('react.profiler');\r\nexport const REACT_PROVIDER_TYPE: symbol = Symbol.for('react.provider');\r\nexport const REACT_CONTEXT_TYPE: symbol = Symbol.for('react.context');\r\nexport const REACT_SERVER_CONTEXT_TYPE: symbol = Symbol.for(\r\n  'react.server_context',\r\n);\r\nexport const REACT_FORWARD_REF_TYPE: symbol = Symbol.for('react.forward_ref');\r\nexport const REACT_SUSPENSE_TYPE: symbol = Symbol.for('react.suspense');\r\nexport const REACT_SUSPENSE_LIST_TYPE: symbol = Symbol.for(\r\n  'react.suspense_list',\r\n);\r\nexport const REACT_MEMO_TYPE: symbol = Symbol.for('react.memo');\r\nexport const REACT_LAZY_TYPE: symbol = Symbol.for('react.lazy');\r\nexport const REACT_SCOPE_TYPE: symbol = Symbol.for('react.scope');\r\nexport const REACT_DEBUG_TRACING_MODE_TYPE: symbol = Symbol.for(\r\n  'react.debug_trace_mode',\r\n);\r\nexport const REACT_OFFSCREEN_TYPE: symbol = Symbol.for('react.offscreen');\r\nexport const REACT_LEGACY_HIDDEN_TYPE: symbol = Symbol.for(\r\n  'react.legacy_hidden',\r\n);\r\nexport const REACT_CACHE_TYPE: symbol = Symbol.for('react.cache');\r\nexport const REACT_TRACING_MARKER_TYPE: symbol = Symbol.for(\r\n  'react.tracing_marker',\r\n);\r\nexport const REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED: symbol = Symbol.for(\r\n  'react.default_value',\r\n);\r\n\r\nconst MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\r\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<any> {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  const maybeIterator =\r\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\r\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst didWarnStateUpdateForUnmountedComponent = {};\r\n\r\nfunction warnNoop(publicInstance, callerName) {\r\n  if (__DEV__) {\r\n    const constructor = publicInstance.constructor;\r\n    const componentName =\r\n      (constructor && (constructor.displayName || constructor.name)) ||\r\n      'ReactClass';\r\n    const warningKey = `${componentName}.${callerName}`;\r\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\r\n      return;\r\n    }\r\n    console.error(\r\n      \"Can't call %s on a component that is not yet mounted. \" +\r\n        'This is a no-op, but it might indicate a bug in your application. ' +\r\n        'Instead, assign to `this.state` directly or define a `state = {};` ' +\r\n        'class property with the desired state in the %s component.',\r\n      callerName,\r\n      componentName,\r\n    );\r\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\r\n  }\r\n}\r\n\r\n/**\r\n * This is the abstract API for an update queue.\r\n */\r\nconst ReactNoopUpdateQueue = {\r\n  /**\r\n   * Checks whether or not this composite component is mounted.\r\n   * @param {ReactClass} publicInstance The instance we want to test.\r\n   * @return {boolean} True if mounted, false otherwise.\r\n   * @protected\r\n   * @final\r\n   */\r\n  isMounted: function(publicInstance) {\r\n    return false;\r\n  },\r\n\r\n  /**\r\n   * Forces an update. This should only be invoked when it is known with\r\n   * certainty that we are **not** in a DOM transaction.\r\n   *\r\n   * You may want to call this when you know that some deeper aspect of the\r\n   * component's state has changed but `setState` was not called.\r\n   *\r\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n   * `componentWillUpdate` and `componentDidUpdate`.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueForceUpdate: function(publicInstance, callback, callerName) {\r\n    warnNoop(publicInstance, 'forceUpdate');\r\n  },\r\n\r\n  /**\r\n   * Replaces all of the state. Always use this or `setState` to mutate state.\r\n   * You should treat `this.state` as immutable.\r\n   *\r\n   * There is no guarantee that `this.state` will be immediately updated, so\r\n   * accessing `this.state` after calling this method may return the old value.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} completeState Next state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} callerName name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueReplaceState: function(\r\n    publicInstance,\r\n    completeState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'replaceState');\r\n  },\r\n\r\n  /**\r\n   * Sets a subset of the state. This only exists because _pendingState is\r\n   * internal. This provides a merging strategy that is not available to deep\r\n   * properties which is confusing. TODO: Expose pendingState or don't use it\r\n   * during the merge.\r\n   *\r\n   * @param {ReactClass} publicInstance The instance that should rerender.\r\n   * @param {object} partialState Next partial state to be merged with state.\r\n   * @param {?function} callback Called after component is updated.\r\n   * @param {?string} Name of the calling function in the public API.\r\n   * @internal\r\n   */\r\n  enqueueSetState: function(\r\n    publicInstance,\r\n    partialState,\r\n    callback,\r\n    callerName,\r\n  ) {\r\n    warnNoop(publicInstance, 'setState');\r\n  },\r\n};\r\n\r\nexport default ReactNoopUpdateQueue;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst assign = Object.assign;\r\n\r\nexport default assign;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactNoopUpdateQueue from './ReactNoopUpdateQueue';\r\nimport assign from 'shared/assign';\r\n\r\nconst emptyObject = {};\r\nif (__DEV__) {\r\n  Object.freeze(emptyObject);\r\n}\r\n\r\n/**\r\n * Base class helpers for the updating state of a component.\r\n */\r\nfunction Component(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  // We initialize the default updater but the real one gets injected by the\r\n  // renderer.\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nComponent.prototype.isReactComponent = {};\r\n\r\n/**\r\n * Sets a subset of the state. Always use this to mutate\r\n * state. You should treat `this.state` as immutable.\r\n *\r\n * There is no guarantee that `this.state` will be immediately updated, so\r\n * accessing `this.state` after calling this method may return the old value.\r\n *\r\n * There is no guarantee that calls to `setState` will run synchronously,\r\n * as they may eventually be batched together.  You can provide an optional\r\n * callback that will be executed when the call to setState is actually\r\n * completed.\r\n *\r\n * When a function is provided to setState, it will be called at some point in\r\n * the future (not synchronously). It will be called with the up to date\r\n * component arguments (state, props, context). These values can be different\r\n * from this.* because your function may be called after receiveProps but before\r\n * shouldComponentUpdate, and this new state, props, and context will not yet be\r\n * assigned to this.\r\n *\r\n * @param {object|function} partialState Next partial state or function to\r\n *        produce next partial state to be merged with current state.\r\n * @param {?function} callback Called after state is updated.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.setState = function(partialState, callback) {\r\n  if (\r\n    typeof partialState !== 'object' &&\r\n    typeof partialState !== 'function' &&\r\n    partialState != null\r\n  ) {\r\n    throw new Error(\r\n      'setState(...): takes an object of state variables to update or a ' +\r\n        'function which returns an object of state variables.',\r\n    );\r\n  }\r\n\r\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\r\n};\r\n\r\n/**\r\n * Forces an update. This should only be invoked when it is known with\r\n * certainty that we are **not** in a DOM transaction.\r\n *\r\n * You may want to call this when you know that some deeper aspect of the\r\n * component's state has changed but `setState` was not called.\r\n *\r\n * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n * `componentWillUpdate` and `componentDidUpdate`.\r\n *\r\n * @param {?function} callback Called after update is complete.\r\n * @final\r\n * @protected\r\n */\r\nComponent.prototype.forceUpdate = function(callback) {\r\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\r\n};\r\n\r\n/**\r\n * Deprecated APIs. These APIs used to exist on classic React classes but since\r\n * we would like to deprecate them, we're not going to move them over to this\r\n * modern base class. Instead, we define a getter that warns if it's accessed.\r\n */\r\nif (__DEV__) {\r\n  const deprecatedAPIs = {\r\n    isMounted: [\r\n      'isMounted',\r\n      'Instead, make sure to clean up subscriptions and pending requests in ' +\r\n        'componentWillUnmount to prevent memory leaks.',\r\n    ],\r\n    replaceState: [\r\n      'replaceState',\r\n      'Refactor your code to use setState instead (see ' +\r\n        'https://github.com/facebook/react/issues/3236).',\r\n    ],\r\n  };\r\n  const defineDeprecationWarning = function(methodName, info) {\r\n    Object.defineProperty(Component.prototype, methodName, {\r\n      get: function() {\r\n        console.warn(\r\n          '%s(...) is deprecated in plain JavaScript React classes. %s',\r\n          info[0],\r\n          info[1],\r\n        );\r\n        return undefined;\r\n      },\r\n    });\r\n  };\r\n  for (const fnName in deprecatedAPIs) {\r\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\r\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ComponentDummy() {}\r\nComponentDummy.prototype = Component.prototype;\r\n\r\n/**\r\n * Convenience component with default shallow equality check for sCU.\r\n */\r\nfunction PureComponent(props, context, updater) {\r\n  this.props = props;\r\n  this.context = context;\r\n  // If a component has string refs, we will assign a different object later.\r\n  this.refs = emptyObject;\r\n  this.updater = updater || ReactNoopUpdateQueue;\r\n}\r\n\r\nconst pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\r\npureComponentPrototype.constructor = PureComponent;\r\n// Avoid an extra prototype jump for these methods.\r\nassign(pureComponentPrototype, Component.prototype);\r\npureComponentPrototype.isPureReactComponent = true;\r\n\r\nexport {Component, PureComponent};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * @flow\r\n */\r\n\r\nimport type {RefObject} from 'shared/ReactTypes';\r\n\r\n// an immutable object with a single mutable value\r\nexport function createRef(): RefObject {\r\n  const refObject = {\r\n    current: null,\r\n  };\r\n  if (__DEV__) {\r\n    Object.seal(refObject);\r\n  }\r\n  return refObject;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\r\n\r\nconst isArrayImpl = Array.isArray;\r\n\r\n// eslint-disable-next-line no-redeclare\r\nfunction isArray(a: mixed): boolean {\r\n  return isArrayImpl(a);\r\n}\r\n\r\nexport default isArray;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport default hasOwnProperty;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current owner.\r\n *\r\n * The current owner is the component who should own any components that are\r\n * currently being constructed.\r\n */\r\nconst ReactCurrentOwner = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Fiber),\r\n};\r\n\r\nexport default ReactCurrentOwner;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\r\nimport {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\r\nimport assign from 'shared/assign';\r\nimport hasOwnProperty from 'shared/hasOwnProperty';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\n\r\nconst RESERVED_PROPS = {\r\n  key: true,\r\n  ref: true,\r\n  __self: true,\r\n  __source: true,\r\n};\r\n\r\nlet specialPropKeyWarningShown,\r\n  specialPropRefWarningShown,\r\n  didWarnAboutStringRefs;\r\n\r\nif (__DEV__) {\r\n  didWarnAboutStringRefs = {};\r\n}\r\n\r\nfunction hasValidRef(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'ref')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.ref !== undefined;\r\n}\r\n\r\nfunction hasValidKey(config) {\r\n  if (__DEV__) {\r\n    if (hasOwnProperty.call(config, 'key')) {\r\n      const getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n      if (getter && getter.isReactWarning) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return config.key !== undefined;\r\n}\r\n\r\nfunction defineKeyPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingKey = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        console.error(\r\n          '%s: `key` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingKey.isReactWarning = true;\r\n  Object.defineProperty(props, 'key', {\r\n    get: warnAboutAccessingKey,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction defineRefPropWarningGetter(props, displayName) {\r\n  const warnAboutAccessingRef = function() {\r\n    if (__DEV__) {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        console.error(\r\n          '%s: `ref` is not a prop. Trying to access it will result ' +\r\n            'in `undefined` being returned. If you need to access the same ' +\r\n            'value within the child component, you should pass it as a different ' +\r\n            'prop. (https://reactjs.org/link/special-props)',\r\n          displayName,\r\n        );\r\n      }\r\n    }\r\n  };\r\n  warnAboutAccessingRef.isReactWarning = true;\r\n  Object.defineProperty(props, 'ref', {\r\n    get: warnAboutAccessingRef,\r\n    configurable: true,\r\n  });\r\n}\r\n\r\nfunction warnIfStringRefCannotBeAutoConverted(config) {\r\n  if (__DEV__) {\r\n    if (\r\n      typeof config.ref === 'string' &&\r\n      ReactCurrentOwner.current &&\r\n      config.__self &&\r\n      ReactCurrentOwner.current.stateNode !== config.__self\r\n    ) {\r\n      const componentName = getComponentNameFromType(\r\n        ReactCurrentOwner.current.type,\r\n      );\r\n\r\n      if (!didWarnAboutStringRefs[componentName]) {\r\n        console.error(\r\n          'Component \"%s\" contains the string ref \"%s\". ' +\r\n            'Support for string refs will be removed in a future major release. ' +\r\n            'This case cannot be automatically converted to an arrow function. ' +\r\n            'We ask you to manually fix this case by using useRef() or createRef() instead. ' +\r\n            'Learn more about using refs safely here: ' +\r\n            'https://reactjs.org/link/strict-mode-string-ref',\r\n          componentName,\r\n          config.ref,\r\n        );\r\n        didWarnAboutStringRefs[componentName] = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Factory method to create a new React element. This no longer adheres to\r\n * the class pattern, so do not use new to call it. Also, instanceof check\r\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n * if something is a React Element.\r\n *\r\n * @param {*} type\r\n * @param {*} props\r\n * @param {*} key\r\n * @param {string|object} ref\r\n * @param {*} owner\r\n * @param {*} self A *temporary* helper to detect places where `this` is\r\n * different from the `owner` when React.createElement is called, so that we\r\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n * functions, and as long as `this` and owner are the same, there will be no\r\n * change in behavior.\r\n * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n * indicating filename, line number, and/or other information.\r\n * @internal\r\n */\r\nconst ReactElement = function(type, key, ref, self, source, owner, props) {\r\n  const element = {\r\n    // This tag allows us to uniquely identify this as a React Element\r\n    $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n    // Built-in properties that belong on the element\r\n    type: type,\r\n    key: key,\r\n    ref: ref,\r\n    props: props,\r\n\r\n    // Record the component responsible for creating this element.\r\n    _owner: owner,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // The validation flag is currently mutative. We put it on\r\n    // an external backing store so that we can freeze the whole object.\r\n    // This can be replaced with a WeakMap once they are implemented in\r\n    // commonly used development environments.\r\n    element._store = {};\r\n\r\n    // To make comparing ReactElements easier for testing purposes, we make\r\n    // the validation flag non-enumerable (where possible, which should\r\n    // include every environment we run tests in), so the test framework\r\n    // ignores it.\r\n    Object.defineProperty(element._store, 'validated', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: false,\r\n    });\r\n    // self and source are DEV only properties.\r\n    Object.defineProperty(element, '_self', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: self,\r\n    });\r\n    // Two elements created in two different places should be considered\r\n    // equal for testing purposes and therefore we hide it from enumeration.\r\n    Object.defineProperty(element, '_source', {\r\n      configurable: false,\r\n      enumerable: false,\r\n      writable: false,\r\n      value: source,\r\n    });\r\n    if (Object.freeze) {\r\n      Object.freeze(element.props);\r\n      Object.freeze(element);\r\n    }\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsx(type, config, maybeKey) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    undefined,\r\n    undefined,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * https://github.com/reactjs/rfcs/pull/107\r\n * @param {*} type\r\n * @param {object} props\r\n * @param {string} key\r\n */\r\nexport function jsxDEV(type, config, maybeKey, source, self) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n\r\n  // Currently, key can be spread in as a prop. This causes a potential\r\n  // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\r\n  // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\r\n  // but as an intermediary step, we will use jsxDEV for everything except\r\n  // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\r\n  // key is explicitly declared to be undefined or not.\r\n  if (maybeKey !== undefined) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(maybeKey);\r\n    }\r\n    key = '' + maybeKey;\r\n  }\r\n\r\n  if (hasValidKey(config)) {\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(config.key);\r\n    }\r\n    key = '' + config.key;\r\n  }\r\n\r\n  if (hasValidRef(config)) {\r\n    ref = config.ref;\r\n    warnIfStringRefCannotBeAutoConverted(config);\r\n  }\r\n\r\n  // Remaining properties are added to a new props object\r\n  for (propName in config) {\r\n    if (\r\n      hasOwnProperty.call(config, propName) &&\r\n      !RESERVED_PROPS.hasOwnProperty(propName)\r\n    ) {\r\n      props[propName] = config[propName];\r\n    }\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  if (key || ref) {\r\n    const displayName =\r\n      typeof type === 'function'\r\n        ? type.displayName || type.name || 'Unknown'\r\n        : type;\r\n    if (key) {\r\n      defineKeyPropWarningGetter(props, displayName);\r\n    }\r\n    if (ref) {\r\n      defineRefPropWarningGetter(props, displayName);\r\n    }\r\n  }\r\n\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Create and return a new ReactElement of the given type.\r\n * See https://reactjs.org/docs/react-api.html#createelement\r\n */\r\nexport function createElement(type, config, children) {\r\n  let propName;\r\n\r\n  // Reserved names are extracted\r\n  const props = {};\r\n\r\n  let key = null;\r\n  let ref = null;\r\n  let self = null;\r\n  let source = null;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      ref = config.ref;\r\n\r\n      if (__DEV__) {\r\n        warnIfStringRefCannotBeAutoConverted(config);\r\n      }\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    self = config.__self === undefined ? null : config.__self;\r\n    source = config.__source === undefined ? null : config.__source;\r\n    // Remaining properties are added to a new props object\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        props[propName] = config[propName];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    if (__DEV__) {\r\n      if (Object.freeze) {\r\n        Object.freeze(childArray);\r\n      }\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  // Resolve default props\r\n  if (type && type.defaultProps) {\r\n    const defaultProps = type.defaultProps;\r\n    for (propName in defaultProps) {\r\n      if (props[propName] === undefined) {\r\n        props[propName] = defaultProps[propName];\r\n      }\r\n    }\r\n  }\r\n  if (__DEV__) {\r\n    if (key || ref) {\r\n      const displayName =\r\n        typeof type === 'function'\r\n          ? type.displayName || type.name || 'Unknown'\r\n          : type;\r\n      if (key) {\r\n        defineKeyPropWarningGetter(props, displayName);\r\n      }\r\n      if (ref) {\r\n        defineRefPropWarningGetter(props, displayName);\r\n      }\r\n    }\r\n  }\r\n  return ReactElement(\r\n    type,\r\n    key,\r\n    ref,\r\n    self,\r\n    source,\r\n    ReactCurrentOwner.current,\r\n    props,\r\n  );\r\n}\r\n\r\n/**\r\n * Return a function that produces ReactElements of a given type.\r\n * See https://reactjs.org/docs/react-api.html#createfactory\r\n */\r\nexport function createFactory(type) {\r\n  const factory = createElement.bind(null, type);\r\n  // Expose the type on the factory and the prototype so that it can be\r\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\r\n  // This should not be named `constructor` since this may not be the function\r\n  // that created the element, and it may not even be a constructor.\r\n  // Legacy hook: remove it\r\n  factory.type = type;\r\n  return factory;\r\n}\r\n\r\nexport function cloneAndReplaceKey(oldElement, newKey) {\r\n  const newElement = ReactElement(\r\n    oldElement.type,\r\n    newKey,\r\n    oldElement.ref,\r\n    oldElement._self,\r\n    oldElement._source,\r\n    oldElement._owner,\r\n    oldElement.props,\r\n  );\r\n\r\n  return newElement;\r\n}\r\n\r\n/**\r\n * Clone and return a new ReactElement using element as the starting point.\r\n * See https://reactjs.org/docs/react-api.html#cloneelement\r\n */\r\nexport function cloneElement(element, config, children) {\r\n  if (element === null || element === undefined) {\r\n    throw new Error(\r\n      `React.cloneElement(...): The argument must be a React element, but you passed ${element}.`,\r\n    );\r\n  }\r\n\r\n  let propName;\r\n\r\n  // Original props are copied\r\n  const props = assign({}, element.props);\r\n\r\n  // Reserved names are extracted\r\n  let key = element.key;\r\n  let ref = element.ref;\r\n  // Self is preserved since the owner is preserved.\r\n  const self = element._self;\r\n  // Source is preserved since cloneElement is unlikely to be targeted by a\r\n  // transpiler, and the original source is probably a better indicator of the\r\n  // true owner.\r\n  const source = element._source;\r\n\r\n  // Owner will be preserved, unless ref is overridden\r\n  let owner = element._owner;\r\n\r\n  if (config != null) {\r\n    if (hasValidRef(config)) {\r\n      // Silently steal the ref from the parent.\r\n      ref = config.ref;\r\n      owner = ReactCurrentOwner.current;\r\n    }\r\n    if (hasValidKey(config)) {\r\n      if (__DEV__) {\r\n        checkKeyStringCoercion(config.key);\r\n      }\r\n      key = '' + config.key;\r\n    }\r\n\r\n    // Remaining properties override existing props\r\n    let defaultProps;\r\n    if (element.type && element.type.defaultProps) {\r\n      defaultProps = element.type.defaultProps;\r\n    }\r\n    for (propName in config) {\r\n      if (\r\n        hasOwnProperty.call(config, propName) &&\r\n        !RESERVED_PROPS.hasOwnProperty(propName)\r\n      ) {\r\n        if (config[propName] === undefined && defaultProps !== undefined) {\r\n          // Resolve default props\r\n          props[propName] = defaultProps[propName];\r\n        } else {\r\n          props[propName] = config[propName];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Children can be more than one argument, and those are transferred onto\r\n  // the newly allocated props object.\r\n  const childrenLength = arguments.length - 2;\r\n  if (childrenLength === 1) {\r\n    props.children = children;\r\n  } else if (childrenLength > 1) {\r\n    const childArray = Array(childrenLength);\r\n    for (let i = 0; i < childrenLength; i++) {\r\n      childArray[i] = arguments[i + 2];\r\n    }\r\n    props.children = childArray;\r\n  }\r\n\r\n  return ReactElement(element.type, key, ref, self, source, owner, props);\r\n}\r\n\r\n/**\r\n * Verifies the object is a ReactElement.\r\n * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n * @param {?object} object\r\n * @return {boolean} True if `object` is a ReactElement.\r\n * @final\r\n */\r\nexport function isValidElement(object) {\r\n  return (\r\n    typeof object === 'object' &&\r\n    object !== null &&\r\n    object.$$typeof === REACT_ELEMENT_TYPE\r\n  );\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {ReactNodeList} from 'shared/ReactTypes';\r\n\r\nimport isArray from 'shared/isArray';\r\nimport {\r\n  getIteratorFn,\r\n  REACT_ELEMENT_TYPE,\r\n  REACT_PORTAL_TYPE,\r\n} from 'shared/ReactSymbols';\r\nimport {checkKeyStringCoercion} from 'shared/CheckStringCoercion';\r\n\r\nimport {isValidElement, cloneAndReplaceKey} from './ReactElement';\r\n\r\nconst SEPARATOR = '.';\r\nconst SUBSEPARATOR = ':';\r\n\r\n/**\r\n * Escape and wrap key so it is safe to use as a reactid\r\n *\r\n * @param {string} key to be escaped.\r\n * @return {string} the escaped key.\r\n */\r\nfunction escape(key: string): string {\r\n  const escapeRegex = /[=:]/g;\r\n  const escaperLookup = {\r\n    '=': '=0',\r\n    ':': '=2',\r\n  };\r\n  const escapedString = key.replace(escapeRegex, function(match) {\r\n    return escaperLookup[match];\r\n  });\r\n\r\n  return '$' + escapedString;\r\n}\r\n\r\n/**\r\n * TODO: Test that a single child and an array with one item have the same key\r\n * pattern.\r\n */\r\n\r\nlet didWarnAboutMaps = false;\r\n\r\nconst userProvidedKeyEscapeRegex = /\\/+/g;\r\nfunction escapeUserProvidedKey(text: string): string {\r\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\r\n}\r\n\r\n/**\r\n * Generate a key string that identifies a element within a set.\r\n *\r\n * @param {*} element A element that could contain a manual key.\r\n * @param {number} index Index that is used if a manual key is not provided.\r\n * @return {string}\r\n */\r\nfunction getElementKey(element: any, index: number): string {\r\n  // Do some typechecking here since we call this blindly. We want to ensure\r\n  // that we don't block potential future ES APIs.\r\n  if (typeof element === 'object' && element !== null && element.key != null) {\r\n    // Explicit key\r\n    if (__DEV__) {\r\n      checkKeyStringCoercion(element.key);\r\n    }\r\n    return escape('' + element.key);\r\n  }\r\n  // Implicit key determined by the index in the set\r\n  return index.toString(36);\r\n}\r\n\r\nfunction mapIntoArray(\r\n  children: ?ReactNodeList,\r\n  array: Array<React$Node>,\r\n  escapedPrefix: string,\r\n  nameSoFar: string,\r\n  callback: (?React$Node) => ?ReactNodeList,\r\n): number {\r\n  const type = typeof children;\r\n\r\n  if (type === 'undefined' || type === 'boolean') {\r\n    // All of the above are perceived as null.\r\n    children = null;\r\n  }\r\n\r\n  let invokeCallback = false;\r\n\r\n  if (children === null) {\r\n    invokeCallback = true;\r\n  } else {\r\n    switch (type) {\r\n      case 'string':\r\n      case 'number':\r\n        invokeCallback = true;\r\n        break;\r\n      case 'object':\r\n        switch ((children: any).$$typeof) {\r\n          case REACT_ELEMENT_TYPE:\r\n          case REACT_PORTAL_TYPE:\r\n            invokeCallback = true;\r\n        }\r\n    }\r\n  }\r\n\r\n  if (invokeCallback) {\r\n    const child = children;\r\n    let mappedChild = callback(child);\r\n    // If it's the only child, treat the name as if it was wrapped in an array\r\n    // so that it's consistent if the number of children grows:\r\n    const childKey =\r\n      nameSoFar === '' ? SEPARATOR + getElementKey(child, 0) : nameSoFar;\r\n    if (isArray(mappedChild)) {\r\n      let escapedChildKey = '';\r\n      if (childKey != null) {\r\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\r\n      }\r\n      mapIntoArray(mappedChild, array, escapedChildKey, '', c => c);\r\n    } else if (mappedChild != null) {\r\n      if (isValidElement(mappedChild)) {\r\n        if (__DEV__) {\r\n          // The `if` statement here prevents auto-disabling of the safe\r\n          // coercion ESLint rule, so we must manually disable it below.\r\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n          if (mappedChild.key && (!child || child.key !== mappedChild.key)) {\r\n            checkKeyStringCoercion(mappedChild.key);\r\n          }\r\n        }\r\n        mappedChild = cloneAndReplaceKey(\r\n          mappedChild,\r\n          // Keep both the (mapped) and old keys if they differ, just as\r\n          // traverseAllChildren used to do for objects as children\r\n          escapedPrefix +\r\n            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\r\n            (mappedChild.key && (!child || child.key !== mappedChild.key)\r\n              ? escapeUserProvidedKey(\r\n                  // eslint-disable-next-line react-internal/safe-string-coercion\r\n                  '' +\r\n                    // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\r\n                    mappedChild.key,\r\n                ) + '/'\r\n              : '') +\r\n            childKey,\r\n        );\r\n      }\r\n      array.push(mappedChild);\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  let child;\r\n  let nextName;\r\n  let subtreeCount = 0; // Count of children found in the current subtree.\r\n  const nextNamePrefix =\r\n    nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\r\n\r\n  if (isArray(children)) {\r\n    for (let i = 0; i < children.length; i++) {\r\n      child = children[i];\r\n      nextName = nextNamePrefix + getElementKey(child, i);\r\n      subtreeCount += mapIntoArray(\r\n        child,\r\n        array,\r\n        escapedPrefix,\r\n        nextName,\r\n        callback,\r\n      );\r\n    }\r\n  } else {\r\n    const iteratorFn = getIteratorFn(children);\r\n    if (typeof iteratorFn === 'function') {\r\n      const iterableChildren: Iterable<React$Node> & {\r\n        entries: any,\r\n      } = (children: any);\r\n\r\n      if (__DEV__) {\r\n        // Warn about using Maps as children\r\n        if (iteratorFn === iterableChildren.entries) {\r\n          if (!didWarnAboutMaps) {\r\n            console.warn(\r\n              'Using Maps as children is not supported. ' +\r\n                'Use an array of keyed ReactElements instead.',\r\n            );\r\n          }\r\n          didWarnAboutMaps = true;\r\n        }\r\n      }\r\n\r\n      const iterator = iteratorFn.call(iterableChildren);\r\n      let step;\r\n      let ii = 0;\r\n      // $FlowFixMe `iteratorFn` might return null according to typing.\r\n      while (!(step = iterator.next()).done) {\r\n        child = step.value;\r\n        nextName = nextNamePrefix + getElementKey(child, ii++);\r\n        subtreeCount += mapIntoArray(\r\n          child,\r\n          array,\r\n          escapedPrefix,\r\n          nextName,\r\n          callback,\r\n        );\r\n      }\r\n    } else if (type === 'object') {\r\n      // eslint-disable-next-line react-internal/safe-string-coercion\r\n      const childrenString = String((children: any));\r\n\r\n      throw new Error(\r\n        `Objects are not valid as a React child (found: ${\r\n          childrenString === '[object Object]'\r\n            ? 'object with keys {' +\r\n              Object.keys((children: any)).join(', ') +\r\n              '}'\r\n            : childrenString\r\n        }). ` +\r\n          'If you meant to render a collection of children, use an array ' +\r\n          'instead.',\r\n      );\r\n    }\r\n  }\r\n\r\n  return subtreeCount;\r\n}\r\n\r\ntype MapFunc = (child: ?React$Node, index: number) => ?ReactNodeList;\r\n\r\n/**\r\n * Maps children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\r\n *\r\n * The provided mapFunction(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} func The map function.\r\n * @param {*} context Context for mapFunction.\r\n * @return {object} Object containing the ordered map of results.\r\n */\r\nfunction mapChildren(\r\n  children: ?ReactNodeList,\r\n  func: MapFunc,\r\n  context: mixed,\r\n): ?Array<React$Node> {\r\n  if (children == null) {\r\n    return children;\r\n  }\r\n  const result = [];\r\n  let count = 0;\r\n  mapIntoArray(children, result, '', '', function(child) {\r\n    return func.call(context, child, count++);\r\n  });\r\n  return result;\r\n}\r\n\r\n/**\r\n * Count the number of children that are typically specified as\r\n * `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\r\n *\r\n * @param {?*} children Children tree container.\r\n * @return {number} The number of children.\r\n */\r\nfunction countChildren(children: ?ReactNodeList): number {\r\n  let n = 0;\r\n  mapChildren(children, () => {\r\n    n++;\r\n    // Don't return anything\r\n  });\r\n  return n;\r\n}\r\n\r\ntype ForEachFunc = (child: ?React$Node) => void;\r\n\r\n/**\r\n * Iterates through children that are typically specified as `props.children`.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\r\n *\r\n * The provided forEachFunc(child, index) will be called for each\r\n * leaf child.\r\n *\r\n * @param {?*} children Children tree container.\r\n * @param {function(*, int)} forEachFunc\r\n * @param {*} forEachContext Context for forEachContext.\r\n */\r\nfunction forEachChildren(\r\n  children: ?ReactNodeList,\r\n  forEachFunc: ForEachFunc,\r\n  forEachContext: mixed,\r\n): void {\r\n  mapChildren(\r\n    children,\r\n    function() {\r\n      forEachFunc.apply(this, arguments);\r\n      // Don't return anything.\r\n    },\r\n    forEachContext,\r\n  );\r\n}\r\n\r\n/**\r\n * Flatten a children object (typically specified as `props.children`) and\r\n * return an array with appropriately re-keyed children.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\r\n */\r\nfunction toArray(children: ?ReactNodeList): Array<React$Node> {\r\n  return mapChildren(children, child => child) || [];\r\n}\r\n\r\n/**\r\n * Returns the first child in a collection of children and verifies that there\r\n * is only one child in the collection.\r\n *\r\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\r\n *\r\n * The current implementation of this function assumes that a single child gets\r\n * passed without a wrapper, but the purpose of this helper function is to\r\n * abstract away the particular structure of children.\r\n *\r\n * @param {?object} children Child collection structure.\r\n * @return {ReactElement} The first and only `ReactElement` contained in the\r\n * structure.\r\n */\r\nfunction onlyChild<T>(children: T): T {\r\n  if (!isValidElement(children)) {\r\n    throw new Error(\r\n      'React.Children.only expected to receive a single React element child.',\r\n    );\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nexport {\r\n  forEachChildren as forEach,\r\n  mapChildren as map,\r\n  countChildren as count,\r\n  onlyChild as only,\r\n  toArray,\r\n};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {REACT_PROVIDER_TYPE, REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport type {ReactContext} from 'shared/ReactTypes';\r\n\r\nexport function createContext<T>(defaultValue: T): ReactContext<T> {\r\n  // TODO: Second argument used to be an optional `calculateChangedBits`\r\n  // function. Warn to reserve for future use?\r\n\r\n  const context: ReactContext<T> = {\r\n    $$typeof: REACT_CONTEXT_TYPE,\r\n    // As a workaround to support multiple concurrent renderers, we categorize\r\n    // some renderers as primary and others as secondary. We only expect\r\n    // there to be two concurrent renderers at most: React Native (primary) and\r\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n    // Secondary renderers store their context values on separate fields.\r\n    _currentValue: defaultValue,\r\n    _currentValue2: defaultValue,\r\n    // Used to track how many concurrent renderers this context currently\r\n    // supports within in a single renderer. Such as parallel server rendering.\r\n    _threadCount: 0,\r\n    // These are circular\r\n    Provider: (null: any),\r\n    Consumer: (null: any),\r\n\r\n    // Add these to use same hidden class in VM as ServerContext\r\n    _defaultValue: (null: any),\r\n    _globalName: (null: any),\r\n  };\r\n\r\n  context.Provider = {\r\n    $$typeof: REACT_PROVIDER_TYPE,\r\n    _context: context,\r\n  };\r\n\r\n  let hasWarnedAboutUsingNestedContextConsumers = false;\r\n  let hasWarnedAboutUsingConsumerProvider = false;\r\n  let hasWarnedAboutDisplayNameOnConsumer = false;\r\n\r\n  if (__DEV__) {\r\n    // A separate object, but proxies back to the original context object for\r\n    // backwards compatibility. It has a different $$typeof, so we can properly\r\n    // warn for the incorrect usage of Context as a Consumer.\r\n    const Consumer = {\r\n      $$typeof: REACT_CONTEXT_TYPE,\r\n      _context: context,\r\n    };\r\n    // $FlowFixMe: Flow complains about not setting a value, which is intentional here\r\n    Object.defineProperties(Consumer, {\r\n      Provider: {\r\n        get() {\r\n          if (!hasWarnedAboutUsingConsumerProvider) {\r\n            hasWarnedAboutUsingConsumerProvider = true;\r\n            console.error(\r\n              'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' +\r\n                'a future major release. Did you mean to render <Context.Provider> instead?',\r\n            );\r\n          }\r\n          return context.Provider;\r\n        },\r\n        set(_Provider) {\r\n          context.Provider = _Provider;\r\n        },\r\n      },\r\n      _currentValue: {\r\n        get() {\r\n          return context._currentValue;\r\n        },\r\n        set(_currentValue) {\r\n          context._currentValue = _currentValue;\r\n        },\r\n      },\r\n      _currentValue2: {\r\n        get() {\r\n          return context._currentValue2;\r\n        },\r\n        set(_currentValue2) {\r\n          context._currentValue2 = _currentValue2;\r\n        },\r\n      },\r\n      _threadCount: {\r\n        get() {\r\n          return context._threadCount;\r\n        },\r\n        set(_threadCount) {\r\n          context._threadCount = _threadCount;\r\n        },\r\n      },\r\n      Consumer: {\r\n        get() {\r\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\r\n            hasWarnedAboutUsingNestedContextConsumers = true;\r\n            console.error(\r\n              'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' +\r\n                'a future major release. Did you mean to render <Context.Consumer> instead?',\r\n            );\r\n          }\r\n          return context.Consumer;\r\n        },\r\n      },\r\n      displayName: {\r\n        get() {\r\n          return context.displayName;\r\n        },\r\n        set(displayName) {\r\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\r\n            console.warn(\r\n              'Setting `displayName` on Context.Consumer has no effect. ' +\r\n                \"You should set it directly on the context with Context.displayName = '%s'.\",\r\n              displayName,\r\n            );\r\n            hasWarnedAboutDisplayNameOnConsumer = true;\r\n          }\r\n        },\r\n      },\r\n    });\r\n    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\r\n    context.Consumer = Consumer;\r\n  } else {\r\n    context.Consumer = context;\r\n  }\r\n\r\n  if (__DEV__) {\r\n    context._currentRenderer = null;\r\n    context._currentRenderer2 = null;\r\n  }\r\n\r\n  return context;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Wakeable, Thenable} from 'shared/ReactTypes';\r\n\r\nimport {REACT_LAZY_TYPE} from 'shared/ReactSymbols';\r\n\r\nconst Uninitialized = -1;\r\nconst Pending = 0;\r\nconst Resolved = 1;\r\nconst Rejected = 2;\r\n\r\ntype UninitializedPayload<T> = {\r\n  _status: -1,\r\n  _result: () => Thenable<{default: T, ...}>,\r\n};\r\n\r\ntype PendingPayload = {\r\n  _status: 0,\r\n  _result: Wakeable,\r\n};\r\n\r\ntype ResolvedPayload<T> = {\r\n  _status: 1,\r\n  _result: {default: T, ...},\r\n};\r\n\r\ntype RejectedPayload = {\r\n  _status: 2,\r\n  _result: mixed,\r\n};\r\n\r\ntype Payload<T> =\r\n  | UninitializedPayload<T>\r\n  | PendingPayload\r\n  | ResolvedPayload<T>\r\n  | RejectedPayload;\r\n\r\nexport type LazyComponent<T, P> = {\r\n  $$typeof: symbol | number,\r\n  _payload: P,\r\n  _init: (payload: P) => T,\r\n};\r\n\r\nfunction lazyInitializer<T>(payload: Payload<T>): T {\r\n  if (payload._status === Uninitialized) {\r\n    const ctor = payload._result;\r\n    const thenable = ctor();\r\n    // Transition to the next state.\r\n    // This might throw either because it's missing or throws. If so, we treat it\r\n    // as still uninitialized and try again next time. Which is the same as what\r\n    // happens if the ctor or any wrappers processing the ctor throws. This might\r\n    // end up fixing it if the resolution was a concurrency bug.\r\n    thenable.then(\r\n      moduleObject => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const resolved: ResolvedPayload<T> = (payload: any);\r\n          resolved._status = Resolved;\r\n          resolved._result = moduleObject;\r\n        }\r\n      },\r\n      error => {\r\n        if (payload._status === Pending || payload._status === Uninitialized) {\r\n          // Transition to the next state.\r\n          const rejected: RejectedPayload = (payload: any);\r\n          rejected._status = Rejected;\r\n          rejected._result = error;\r\n        }\r\n      },\r\n    );\r\n    if (payload._status === Uninitialized) {\r\n      // In case, we're still uninitialized, then we're waiting for the thenable\r\n      // to resolve. Set it as pending in the meantime.\r\n      const pending: PendingPayload = (payload: any);\r\n      pending._status = Pending;\r\n      pending._result = thenable;\r\n    }\r\n  }\r\n  if (payload._status === Resolved) {\r\n    const moduleObject = payload._result;\r\n    if (__DEV__) {\r\n      if (moduleObject === undefined) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\\n\\n\" +\r\n            'Did you accidentally put curly braces around the import?',\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    if (__DEV__) {\r\n      if (!('default' in moduleObject)) {\r\n        console.error(\r\n          'lazy: Expected the result of a dynamic imp' +\r\n            'ort() call. ' +\r\n            'Instead received: %s\\n\\nYour code should look like: \\n  ' +\r\n            // Break up imports to avoid accidentally parsing them as dependencies.\r\n            'const MyComponent = lazy(() => imp' +\r\n            \"ort('./MyComponent'))\",\r\n          moduleObject,\r\n        );\r\n      }\r\n    }\r\n    return moduleObject.default;\r\n  } else {\r\n    throw payload._result;\r\n  }\r\n}\r\n\r\nexport function lazy<T>(\r\n  ctor: () => Thenable<{default: T, ...}>,\r\n): LazyComponent<T, Payload<T>> {\r\n  const payload: Payload<T> = {\r\n    // We use these fields to store the result.\r\n    _status: Uninitialized,\r\n    _result: ctor,\r\n  };\r\n\r\n  const lazyType: LazyComponent<T, Payload<T>> = {\r\n    $$typeof: REACT_LAZY_TYPE,\r\n    _payload: payload,\r\n    _init: lazyInitializer,\r\n  };\r\n\r\n  if (__DEV__) {\r\n    // In production, this would just set it on the object.\r\n    let defaultProps;\r\n    let propTypes;\r\n    // $FlowFixMe\r\n    Object.defineProperties(lazyType, {\r\n      defaultProps: {\r\n        configurable: true,\r\n        get() {\r\n          return defaultProps;\r\n        },\r\n        set(newDefaultProps) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `defaultProps` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          defaultProps = newDefaultProps;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'defaultProps', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n      propTypes: {\r\n        configurable: true,\r\n        get() {\r\n          return propTypes;\r\n        },\r\n        set(newPropTypes) {\r\n          console.error(\r\n            'React.lazy(...): It is not supported to assign `propTypes` to ' +\r\n              'a lazy component import. Either specify them where the component ' +\r\n              'is defined, or create a wrapping component around it.',\r\n          );\r\n          propTypes = newPropTypes;\r\n          // Match production behavior more closely:\r\n          // $FlowFixMe\r\n          Object.defineProperty(lazyType, 'propTypes', {\r\n            enumerable: true,\r\n          });\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  return lazyType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_FORWARD_REF_TYPE, REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nexport function forwardRef<Props, ElementType: React$ElementType>(\r\n  render: (props: Props, ref: React$Ref<ElementType>) => React$Node,\r\n) {\r\n  if (__DEV__) {\r\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\r\n      console.error(\r\n        'forwardRef requires a render function but received a `memo` ' +\r\n          'component. Instead of forwardRef(memo(...)), use ' +\r\n          'memo(forwardRef(...)).',\r\n      );\r\n    } else if (typeof render !== 'function') {\r\n      console.error(\r\n        'forwardRef requires a render function but was given %s.',\r\n        render === null ? 'null' : typeof render,\r\n      );\r\n    } else {\r\n      if (render.length !== 0 && render.length !== 2) {\r\n        console.error(\r\n          'forwardRef render functions accept exactly two parameters: props and ref. %s',\r\n          render.length === 1\r\n            ? 'Did you forget to use the ref parameter?'\r\n            : 'Any additional parameter will be undefined.',\r\n        );\r\n      }\r\n    }\r\n\r\n    if (render != null) {\r\n      if (render.defaultProps != null || render.propTypes != null) {\r\n        console.error(\r\n          'forwardRef render functions do not support propTypes or defaultProps. ' +\r\n            'Did you accidentally pass a React component?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  const elementType = {\r\n    $$typeof: REACT_FORWARD_REF_TYPE,\r\n    render,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.forwardRef((props, ref) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!render.name && !render.displayName) {\r\n          render.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport {REACT_MEMO_TYPE} from 'shared/ReactSymbols';\r\n\r\nimport isValidElementType from 'shared/isValidElementType';\r\n\r\nexport function memo<Props>(\r\n  type: React$ElementType,\r\n  compare?: (oldProps: Props, newProps: Props) => boolean,\r\n) {\r\n  if (__DEV__) {\r\n    if (!isValidElementType(type)) {\r\n      console.error(\r\n        'memo: The first argument must be a component. Instead ' +\r\n          'received: %s',\r\n        type === null ? 'null' : typeof type,\r\n      );\r\n    }\r\n  }\r\n  const elementType = {\r\n    $$typeof: REACT_MEMO_TYPE,\r\n    type,\r\n    compare: compare === undefined ? null : compare,\r\n  };\r\n  if (__DEV__) {\r\n    let ownName;\r\n    Object.defineProperty(elementType, 'displayName', {\r\n      enumerable: false,\r\n      configurable: true,\r\n      get: function() {\r\n        return ownName;\r\n      },\r\n      set: function(name) {\r\n        ownName = name;\r\n\r\n        // The inner component shouldn't inherit this display name in most cases,\r\n        // because the component may be used elsewhere.\r\n        // But it's nice for anonymous functions to inherit the name,\r\n        // so that our component-stack generation logic will display their frames.\r\n        // An anonymous function generally suggests a pattern like:\r\n        //   React.memo((props) => {...});\r\n        // This kind of inner function is not used elsewhere so the side effect is okay.\r\n        if (!type.name && !type.displayName) {\r\n          type.displayName = name;\r\n        }\r\n      },\r\n    });\r\n  }\r\n  return elementType;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\n\r\n/**\r\n * Keeps track of the current dispatcher.\r\n */\r\nconst ReactCurrentDispatcher = {\r\n  /**\r\n   * @internal\r\n   * @type {ReactComponent}\r\n   */\r\n  current: (null: null | Dispatcher),\r\n};\r\n\r\nexport default ReactCurrentDispatcher;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Dispatcher} from 'react-reconciler/src/ReactInternalTypes';\r\nimport type {\r\n  MutableSource,\r\n  MutableSourceGetSnapshotFn,\r\n  MutableSourceSubscribeFn,\r\n  ReactContext,\r\n  StartTransitionOptions,\r\n  Usable,\r\n} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\n\r\ntype BasicStateAction<S> = (S => S) | S;\r\ntype Dispatch<A> = A => void;\r\n\r\nfunction resolveDispatcher() {\r\n  const dispatcher = ReactCurrentDispatcher.current;\r\n  if (__DEV__) {\r\n    if (dispatcher === null) {\r\n      console.error(\r\n        'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\r\n          ' one of the following reasons:\\n' +\r\n          '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\r\n          '2. You might be breaking the Rules of Hooks\\n' +\r\n          '3. You might have more than one copy of React in the same app\\n' +\r\n          'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\r\n      );\r\n    }\r\n  }\r\n  // Will result in a null access error if accessed outside render phase. We\r\n  // intentionally don't throw our own error because this is in a hot path.\r\n  // Also helps ensure this is inlined.\r\n  return ((dispatcher: any): Dispatcher);\r\n}\r\n\r\nexport function getCacheSignal(): AbortSignal {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheSignal();\r\n}\r\n\r\nexport function getCacheForType<T>(resourceType: () => T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.getCacheForType(resourceType);\r\n}\r\n\r\nexport function useContext<T>(Context: ReactContext<T>): T {\r\n  const dispatcher = resolveDispatcher();\r\n  if (__DEV__) {\r\n    // TODO: add a more generic warning for invalid values.\r\n    if ((Context: any)._context !== undefined) {\r\n      const realContext = (Context: any)._context;\r\n      // Don't deduplicate because this legitimately causes bugs\r\n      // and nobody should be using this in existing code.\r\n      if (realContext.Consumer === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' +\r\n            'removed in a future major release. Did you mean to call useContext(Context) instead?',\r\n        );\r\n      } else if (realContext.Provider === Context) {\r\n        console.error(\r\n          'Calling useContext(Context.Provider) is not supported. ' +\r\n            'Did you mean to call useContext(Context) instead?',\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return dispatcher.useContext(Context);\r\n}\r\n\r\nexport function useState<S>(\r\n  initialState: (() => S) | S,\r\n): [S, Dispatch<BasicStateAction<S>>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useState(initialState);\r\n}\r\n\r\nexport function useReducer<S, I, A>(\r\n  reducer: (S, A) => S,\r\n  initialArg: I,\r\n  init?: I => S,\r\n): [S, Dispatch<A>] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useReducer(reducer, initialArg, init);\r\n}\r\n\r\nexport function useRef<T>(initialValue: T): {current: T} {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useRef(initialValue);\r\n}\r\n\r\nexport function useEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useEffect(create, deps);\r\n}\r\n\r\nexport function useInsertionEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useInsertionEffect(create, deps);\r\n}\r\n\r\nexport function useLayoutEffect(\r\n  create: () => (() => void) | void,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useLayoutEffect(create, deps);\r\n}\r\n\r\nexport function useCallback<T>(\r\n  callback: T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useCallback(callback, deps);\r\n}\r\n\r\nexport function useMemo<T>(\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMemo(create, deps);\r\n}\r\n\r\nexport function useImperativeHandle<T>(\r\n  ref: {current: T | null} | ((inst: T | null) => mixed) | null | void,\r\n  create: () => T,\r\n  deps: Array<mixed> | void | null,\r\n): void {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useImperativeHandle(ref, create, deps);\r\n}\r\n\r\nexport function useDebugValue<T>(\r\n  value: T,\r\n  formatterFn: ?(value: T) => mixed,\r\n): void {\r\n  if (__DEV__) {\r\n    const dispatcher = resolveDispatcher();\r\n    return dispatcher.useDebugValue(value, formatterFn);\r\n  }\r\n}\r\n\r\nexport const emptyObject = {};\r\n\r\nexport function useTransition(): [\r\n  boolean,\r\n  (callback: () => void, options?: StartTransitionOptions) => void,\r\n] {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useTransition();\r\n}\r\n\r\nexport function useDeferredValue<T>(value: T): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useDeferredValue(value);\r\n}\r\n\r\nexport function useId(): string {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useId();\r\n}\r\n\r\nexport function useMutableSource<Source, Snapshot>(\r\n  source: MutableSource<Source>,\r\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\r\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\r\n): Snapshot {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useMutableSource(source, getSnapshot, subscribe);\r\n}\r\n\r\nexport function useSyncExternalStore<T>(\r\n  subscribe: (() => void) => () => void,\r\n  getSnapshot: () => T,\r\n  getServerSnapshot?: () => T,\r\n): T {\r\n  const dispatcher = resolveDispatcher();\r\n  return dispatcher.useSyncExternalStore(\r\n    subscribe,\r\n    getSnapshot,\r\n    getServerSnapshot,\r\n  );\r\n}\r\n\r\nexport function useCacheRefresh(): <T>(?() => T, ?T) => void {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.useCacheRefresh();\r\n}\r\n\r\nexport function use<T>(usable: Usable<T>): T {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.use(usable);\r\n}\r\n\r\nexport function useMemoCache(size: number): Array<any> {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.useMemoCache(size);\r\n}\r\n\r\nexport function useEvent<T>(callback: T): void {\r\n  const dispatcher = resolveDispatcher();\r\n  // $FlowFixMe This is unstable, thus optional\r\n  return dispatcher.useEvent(callback);\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {BatchConfigTransition} from 'react-reconciler/src/ReactFiberTracingMarkerComponent.new';\r\n\r\ntype BatchConfig = {\r\n  transition: BatchConfigTransition | null,\r\n};\r\n/**\r\n * Keeps track of the current batch's configuration such as how long an update\r\n * should suspend for if it needs to.\r\n */\r\nconst ReactCurrentBatchConfig: BatchConfig = {\r\n  transition: null,\r\n};\r\n\r\nexport default ReactCurrentBatchConfig;\r\n","import type {ReactServerContext} from 'shared/ReactTypes';\r\n\r\nexport const ContextRegistry: {\r\n  [globalName: string]: ReactServerContext<any>,\r\n} = {};\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport ReactCurrentDispatcher from './ReactCurrentDispatcher';\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport ReactCurrentOwner from './ReactCurrentOwner';\r\nimport ReactDebugCurrentFrame from './ReactDebugCurrentFrame';\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport {ContextRegistry} from './ReactServerContextRegistry';\r\n\r\nconst ReactSharedInternals = {\r\n  ReactCurrentDispatcher,\r\n  ReactCurrentBatchConfig,\r\n  ReactCurrentOwner,\r\n};\r\n\r\nif (__DEV__) {\r\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\r\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\r\n}\r\n\r\nif (enableServerContext) {\r\n  ReactSharedInternals.ContextRegistry = ContextRegistry;\r\n}\r\n\r\nexport default ReactSharedInternals;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport {\r\n  REACT_PROVIDER_TYPE,\r\n  REACT_SERVER_CONTEXT_TYPE,\r\n  REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport type {\r\n  ReactServerContext,\r\n  ServerContextJSONValue,\r\n} from 'shared/ReactTypes';\r\n\r\nimport {enableServerContext} from 'shared/ReactFeatureFlags';\r\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\r\n\r\nconst ContextRegistry = ReactSharedInternals.ContextRegistry;\r\n\r\nexport function createServerContext<T: ServerContextJSONValue>(\r\n  globalName: string,\r\n  defaultValue: T,\r\n): ReactServerContext<T> {\r\n  if (!enableServerContext) {\r\n    throw new Error('Not implemented.');\r\n  }\r\n  let wasDefined = true;\r\n  if (!ContextRegistry[globalName]) {\r\n    wasDefined = false;\r\n    const context: ReactServerContext<T> = {\r\n      $$typeof: REACT_SERVER_CONTEXT_TYPE,\r\n\r\n      // As a workaround to support multiple concurrent renderers, we categorize\r\n      // some renderers as primary and others as secondary. We only expect\r\n      // there to be two concurrent renderers at most: React Native (primary) and\r\n      // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n      // Secondary renderers store their context values on separate fields.\r\n      _currentValue: defaultValue,\r\n      _currentValue2: defaultValue,\r\n\r\n      _defaultValue: defaultValue,\r\n\r\n      // Used to track how many concurrent renderers this context currently\r\n      // supports within in a single renderer. Such as parallel server rendering.\r\n      _threadCount: 0,\r\n      // These are circular\r\n      Provider: (null: any),\r\n      Consumer: (null: any),\r\n      _globalName: globalName,\r\n    };\r\n\r\n    context.Provider = {\r\n      $$typeof: REACT_PROVIDER_TYPE,\r\n      _context: context,\r\n    };\r\n\r\n    if (__DEV__) {\r\n      let hasWarnedAboutUsingConsumer;\r\n      context._currentRenderer = null;\r\n      context._currentRenderer2 = null;\r\n      Object.defineProperties(\r\n        context,\r\n        ({\r\n          Consumer: {\r\n            get() {\r\n              if (!hasWarnedAboutUsingConsumer) {\r\n                console.error(\r\n                  'Consumer pattern is not supported by ReactServerContext',\r\n                );\r\n                hasWarnedAboutUsingConsumer = true;\r\n              }\r\n              return null;\r\n            },\r\n          },\r\n        }: any),\r\n      );\r\n    }\r\n    ContextRegistry[globalName] = context;\r\n  }\r\n\r\n  const context = ContextRegistry[globalName];\r\n  if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\r\n    context._defaultValue = defaultValue;\r\n    if (\r\n      context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\r\n    ) {\r\n      context._currentValue = defaultValue;\r\n    }\r\n    if (\r\n      context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED\r\n    ) {\r\n      context._currentValue2 = defaultValue;\r\n    }\r\n  } else if (wasDefined) {\r\n    throw new Error(`ServerContext: ${globalName} already defined`);\r\n  }\r\n  return context;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\nimport type {StartTransitionOptions} from 'shared/ReactTypes';\r\n\r\nimport ReactCurrentBatchConfig from './ReactCurrentBatchConfig';\r\nimport {enableTransitionTracing} from 'shared/ReactFeatureFlags';\r\n\r\nexport function startTransition(\r\n  scope: () => void,\r\n  options?: StartTransitionOptions,\r\n) {\r\n  const prevTransition = ReactCurrentBatchConfig.transition;\r\n  ReactCurrentBatchConfig.transition = {};\r\n  const currentTransition = ReactCurrentBatchConfig.transition;\r\n\r\n  if (__DEV__) {\r\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\r\n  }\r\n\r\n  if (enableTransitionTracing) {\r\n    if (options !== undefined && options.name !== undefined) {\r\n      ReactCurrentBatchConfig.transition.name = options.name;\r\n      ReactCurrentBatchConfig.transition.startTime = -1;\r\n    }\r\n  }\r\n\r\n  try {\r\n    scope();\r\n  } finally {\r\n    ReactCurrentBatchConfig.transition = prevTransition;\r\n\r\n    if (__DEV__) {\r\n      if (prevTransition === null && currentTransition._updatedFibers) {\r\n        const updatedFibersCount = currentTransition._updatedFibers.size;\r\n        if (updatedFibersCount > 10) {\r\n          console.warn(\r\n            'Detected a large number of updates inside startTransition. ' +\r\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\r\n              'Otherwise concurrent mode guarantees are off the table.',\r\n          );\r\n        }\r\n        currentTransition._updatedFibers.clear();\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {Thenable} from 'shared/ReactTypes';\r\nimport ReactCurrentActQueue from './ReactCurrentActQueue';\r\nimport enqueueTask from 'shared/enqueueTask';\r\n\r\nlet actScopeDepth = 0;\r\nlet didWarnNoAwaitAct = false;\r\n\r\nexport function act<T>(callback: () => T | Thenable<T>): Thenable<T> {\r\n  if (__DEV__) {\r\n    // `act` calls can be nested, so we track the depth. This represents the\r\n    // number of `act` scopes on the stack.\r\n    const prevActScopeDepth = actScopeDepth;\r\n    actScopeDepth++;\r\n\r\n    if (ReactCurrentActQueue.current === null) {\r\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\r\n      // will detect the queue and use it instead of Scheduler.\r\n      ReactCurrentActQueue.current = [];\r\n    }\r\n\r\n    const prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\r\n    let result;\r\n    try {\r\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\r\n      // set to `true` while the given callback is executed, not for updates\r\n      // triggered during an async event, because this is how the legacy\r\n      // implementation of `act` behaved.\r\n      ReactCurrentActQueue.isBatchingLegacy = true;\r\n      result = callback();\r\n\r\n      // Replicate behavior of original `act` implementation in legacy mode,\r\n      // which flushed updates immediately after the scope function exits, even\r\n      // if it's an async function.\r\n      if (\r\n        !prevIsBatchingLegacy &&\r\n        ReactCurrentActQueue.didScheduleLegacyUpdate\r\n      ) {\r\n        const queue = ReactCurrentActQueue.current;\r\n        if (queue !== null) {\r\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\r\n          flushActQueue(queue);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      popActScope(prevActScopeDepth);\r\n      throw error;\r\n    } finally {\r\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\r\n    }\r\n\r\n    if (\r\n      result !== null &&\r\n      typeof result === 'object' &&\r\n      typeof result.then === 'function'\r\n    ) {\r\n      const thenableResult: Thenable<T> = (result: any);\r\n      // The callback is an async function (i.e. returned a promise). Wait\r\n      // for it to resolve before exiting the current scope.\r\n      let wasAwaited = false;\r\n      const thenable: Thenable<T> = {\r\n        then(resolve, reject) {\r\n          wasAwaited = true;\r\n          thenableResult.then(\r\n            returnValue => {\r\n              popActScope(prevActScopeDepth);\r\n              if (actScopeDepth === 0) {\r\n                // We've exited the outermost act scope. Recursively flush the\r\n                // queue until there's no remaining work.\r\n                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n              } else {\r\n                resolve(returnValue);\r\n              }\r\n            },\r\n            error => {\r\n              // The callback threw an error.\r\n              popActScope(prevActScopeDepth);\r\n              reject(error);\r\n            },\r\n          );\r\n        },\r\n      };\r\n\r\n      if (__DEV__) {\r\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\r\n          // eslint-disable-next-line no-undef\r\n          Promise.resolve()\r\n            .then(() => {})\r\n            .then(() => {\r\n              if (!wasAwaited) {\r\n                didWarnNoAwaitAct = true;\r\n                console.error(\r\n                  'You called act(async () => ...) without await. ' +\r\n                    'This could lead to unexpected testing behaviour, ' +\r\n                    'interleaving multiple act calls and mixing their ' +\r\n                    'scopes. ' +\r\n                    'You should - await act(async () => ...);',\r\n                );\r\n              }\r\n            });\r\n        }\r\n      }\r\n      return thenable;\r\n    } else {\r\n      const returnValue: T = (result: any);\r\n      // The callback is not an async function. Exit the current scope\r\n      // immediately, without awaiting.\r\n      popActScope(prevActScopeDepth);\r\n      if (actScopeDepth === 0) {\r\n        // Exiting the outermost act scope. Flush the queue.\r\n        const queue = ReactCurrentActQueue.current;\r\n        if (queue !== null) {\r\n          flushActQueue(queue);\r\n          ReactCurrentActQueue.current = null;\r\n        }\r\n        // Return a thenable. If the user awaits it, we'll flush again in\r\n        // case additional work was scheduled by a microtask.\r\n        const thenable: Thenable<T> = {\r\n          then(resolve, reject) {\r\n            // Confirm we haven't re-entered another `act` scope, in case\r\n            // the user does something weird like await the thenable\r\n            // multiple times.\r\n            if (ReactCurrentActQueue.current === null) {\r\n              // Recursively flush the queue until there's no remaining work.\r\n              ReactCurrentActQueue.current = [];\r\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n            } else {\r\n              resolve(returnValue);\r\n            }\r\n          },\r\n        };\r\n        return thenable;\r\n      } else {\r\n        // Since we're inside a nested `act` scope, the returned thenable\r\n        // immediately resolves. The outer scope will flush the queue.\r\n        const thenable: Thenable<T> = {\r\n          then(resolve, reject) {\r\n            resolve(returnValue);\r\n          },\r\n        };\r\n        return thenable;\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('act(...) is not supported in production builds of React.');\r\n  }\r\n}\r\n\r\nfunction popActScope(prevActScopeDepth) {\r\n  if (__DEV__) {\r\n    if (prevActScopeDepth !== actScopeDepth - 1) {\r\n      console.error(\r\n        'You seem to have overlapping act() calls, this is not supported. ' +\r\n          'Be sure to await previous act() calls before making a new one. ',\r\n      );\r\n    }\r\n    actScopeDepth = prevActScopeDepth;\r\n  }\r\n}\r\n\r\nfunction recursivelyFlushAsyncActWork<T>(\r\n  returnValue: T,\r\n  resolve: T => mixed,\r\n  reject: mixed => mixed,\r\n) {\r\n  if (__DEV__) {\r\n    const queue = ReactCurrentActQueue.current;\r\n    if (queue !== null) {\r\n      try {\r\n        flushActQueue(queue);\r\n        enqueueTask(() => {\r\n          if (queue.length === 0) {\r\n            // No additional work was scheduled. Finish.\r\n            ReactCurrentActQueue.current = null;\r\n            resolve(returnValue);\r\n          } else {\r\n            // Keep flushing work until there's none left.\r\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    } else {\r\n      resolve(returnValue);\r\n    }\r\n  }\r\n}\r\n\r\nlet isFlushing = false;\r\nfunction flushActQueue(queue) {\r\n  if (__DEV__) {\r\n    if (!isFlushing) {\r\n      // Prevent re-entrance.\r\n      isFlushing = true;\r\n      let i = 0;\r\n      try {\r\n        for (; i < queue.length; i++) {\r\n          let callback = queue[i];\r\n          do {\r\n            callback = callback(true);\r\n          } while (callback !== null);\r\n        }\r\n        queue.length = 0;\r\n      } catch (error) {\r\n        // If something throws, leave the remaining callbacks on the queue.\r\n        queue = queue.slice(i + 1);\r\n        throw error;\r\n      } finally {\r\n        isFlushing = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport ReactVersion from 'shared/ReactVersion';\r\nimport {\r\n  REACT_FRAGMENT_TYPE,\r\n  REACT_DEBUG_TRACING_MODE_TYPE,\r\n  REACT_PROFILER_TYPE,\r\n  REACT_STRICT_MODE_TYPE,\r\n  REACT_SUSPENSE_TYPE,\r\n  REACT_SUSPENSE_LIST_TYPE,\r\n  REACT_LEGACY_HIDDEN_TYPE,\r\n  REACT_OFFSCREEN_TYPE,\r\n  REACT_SCOPE_TYPE,\r\n  REACT_CACHE_TYPE,\r\n  REACT_TRACING_MARKER_TYPE,\r\n} from 'shared/ReactSymbols';\r\n\r\nimport {Component, PureComponent} from './ReactBaseClasses';\r\nimport {createRef} from './ReactCreateRef';\r\nimport {forEach, map, count, toArray, only} from './ReactChildren';\r\nimport {\r\n  createElement as createElementProd,\r\n  createFactory as createFactoryProd,\r\n  cloneElement as cloneElementProd,\r\n  isValidElement,\r\n} from './ReactElement';\r\nimport {createContext} from './ReactContext';\r\nimport {lazy} from './ReactLazy';\r\nimport {forwardRef} from './ReactForwardRef';\r\nimport {memo} from './ReactMemo';\r\nimport {\r\n  getCacheSignal,\r\n  getCacheForType,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useEvent,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  useTransition,\r\n  useDeferredValue,\r\n  useId,\r\n  useCacheRefresh,\r\n  use,\r\n  useMemoCache,\r\n} from './ReactHooks';\r\nimport {\r\n  createElementWithValidation,\r\n  createFactoryWithValidation,\r\n  cloneElementWithValidation,\r\n} from './ReactElementValidator';\r\nimport {createServerContext} from './ReactServerContext';\r\nimport {createMutableSource} from './ReactMutableSource';\r\nimport ReactSharedInternals from './ReactSharedInternals';\r\nimport {startTransition} from './ReactStartTransition';\r\nimport {act} from './ReactAct';\r\n\r\n// TODO: Move this branching into the other module instead and just re-export.\r\nconst createElement = __DEV__ ? createElementWithValidation : createElementProd;\r\nconst cloneElement = __DEV__ ? cloneElementWithValidation : cloneElementProd;\r\nconst createFactory = __DEV__ ? createFactoryWithValidation : createFactoryProd;\r\n\r\nconst Children = {\r\n  map,\r\n  forEach,\r\n  count,\r\n  toArray,\r\n  only,\r\n};\r\n\r\nexport {\r\n  Children,\r\n  createMutableSource,\r\n  createRef,\r\n  Component,\r\n  PureComponent,\r\n  createContext,\r\n  createServerContext,\r\n  forwardRef,\r\n  lazy,\r\n  memo,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useEvent as experimental_useEvent,\r\n  useImperativeHandle,\r\n  useDebugValue,\r\n  useInsertionEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useMutableSource,\r\n  useSyncExternalStore,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n  REACT_FRAGMENT_TYPE as Fragment,\r\n  REACT_PROFILER_TYPE as Profiler,\r\n  REACT_STRICT_MODE_TYPE as StrictMode,\r\n  REACT_DEBUG_TRACING_MODE_TYPE as unstable_DebugTracingMode,\r\n  REACT_SUSPENSE_TYPE as Suspense,\r\n  createElement,\r\n  cloneElement,\r\n  isValidElement,\r\n  ReactVersion as version,\r\n  ReactSharedInternals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\r\n  // Deprecated behind disableCreateFactory\r\n  createFactory,\r\n  // Concurrent Mode\r\n  useTransition,\r\n  startTransition,\r\n  useDeferredValue,\r\n  REACT_SUSPENSE_LIST_TYPE as SuspenseList,\r\n  REACT_LEGACY_HIDDEN_TYPE as unstable_LegacyHidden,\r\n  REACT_OFFSCREEN_TYPE as unstable_Offscreen,\r\n  getCacheSignal as unstable_getCacheSignal,\r\n  getCacheForType as unstable_getCacheForType,\r\n  useCacheRefresh as unstable_useCacheRefresh,\r\n  REACT_CACHE_TYPE as unstable_Cache,\r\n  use as experimental_use,\r\n  useMemoCache as unstable_useMemoCache,\r\n  // enableScopeAPI\r\n  REACT_SCOPE_TYPE as unstable_Scope,\r\n  // enableTransitionTracing\r\n  REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,\r\n  useId,\r\n  act,\r\n};\r\n"],"names":["REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_SERVER_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_CACHE_TYPE","REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactNoopUpdateQueue","isMounted","publicInstance","enqueueForceUpdate","callback","callerName","warnNoop","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","Component","props","context","updater","refs","prototype","isReactComponent","setState","Error","forceUpdate","ComponentDummy","PureComponent","pureComponentPrototype","constructor","isPureReactComponent","createRef","refObject","current","isArrayImpl","Array","isArray","a","hasOwnProperty","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","hasValidRef","config","undefined","hasValidKey","ReactElement","type","self","source","owner","element","$$typeof","_owner","createElement","children","propName","call","childrenLength","arguments","length","childArray","i","defaultProps","createFactory","factory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","child","mappedChild","childKey","escapedChildKey","c","push","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","step","ii","next","done","value","childrenString","String","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","apply","toArray","onlyChild","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","payload","_status","ctor","_result","thenable","then","moduleObject","resolved","error","rejected","pending","default","lazy","lazyType","_payload","_init","forwardRef","render","elementType","memo","compare","ReactCurrentDispatcher","resolveDispatcher","dispatcher","getCacheSignal","getCacheForType","resourceType","useContext","Context","useState","initialState","useReducer","reducer","initialArg","init","useRef","initialValue","useEffect","create","deps","useInsertionEffect","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","useCacheRefresh","use","usable","useMemoCache","size","useEvent","ReactCurrentBatchConfig","transition","ContextRegistry","ReactSharedInternals","createServerContext","globalName","wasDefined","startTransition","scope","options","prevTransition","act","__DEV__","createElementProd","cloneElementProd","createFactoryProd","Children","map","forEach","only"],"mappings":"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"}