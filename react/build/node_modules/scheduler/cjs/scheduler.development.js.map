{"version":3,"file":"scheduler.development.js","sources":["../../../../packages/scheduler/src/SchedulerFeatureFlags.js","../../../../packages/scheduler/src/SchedulerMinHeap.js","../../../../packages/scheduler/src/SchedulerPriorities.js","../../../../packages/scheduler/src/SchedulerProfiling.js","../../../../packages/scheduler/src/forks/Scheduler.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\nexport const enableSchedulerDebugging = false;\r\nexport const enableIsInputPending = false;\r\nexport const enableProfiling = false;\r\nexport const enableIsInputPendingContinuous = false;\r\nexport const frameYieldMs = 5;\r\nexport const continuousYieldMs = 50;\r\nexport const maxYieldMs = 300;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow strict\r\n */\r\n\r\ntype Heap = Array<Node>;\r\ntype Node = {\r\n  id: number,\r\n  sortIndex: number,\r\n};\r\n\r\nexport function push(heap: Heap, node: Node): void {\r\n  const index = heap.length;\r\n  heap.push(node);\r\n  siftUp(heap, node, index);\r\n}\r\n\r\nexport function peek(heap: Heap): Node | null {\r\n  return heap.length === 0 ? null : heap[0];\r\n}\r\n\r\nexport function pop(heap: Heap): Node | null {\r\n  if (heap.length === 0) {\r\n    return null;\r\n  }\r\n  const first = heap[0];\r\n  const last = heap.pop();\r\n  if (last !== first) {\r\n    heap[0] = last;\r\n    siftDown(heap, last, 0);\r\n  }\r\n  return first;\r\n}\r\n\r\nfunction siftUp(heap, node, i) {\r\n  let index = i;\r\n  while (index > 0) {\r\n    const parentIndex = (index - 1) >>> 1;\r\n    const parent = heap[parentIndex];\r\n    if (compare(parent, node) > 0) {\r\n      // The parent is larger. Swap positions.\r\n      heap[parentIndex] = node;\r\n      heap[index] = parent;\r\n      index = parentIndex;\r\n    } else {\r\n      // The parent is smaller. Exit.\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction siftDown(heap, node, i) {\r\n  let index = i;\r\n  const length = heap.length;\r\n  const halfLength = length >>> 1;\r\n  while (index < halfLength) {\r\n    const leftIndex = (index + 1) * 2 - 1;\r\n    const left = heap[leftIndex];\r\n    const rightIndex = leftIndex + 1;\r\n    const right = heap[rightIndex];\r\n\r\n    // If the left or right node is smaller, swap with the smaller of those.\r\n    if (compare(left, node) < 0) {\r\n      if (rightIndex < length && compare(right, left) < 0) {\r\n        heap[index] = right;\r\n        heap[rightIndex] = node;\r\n        index = rightIndex;\r\n      } else {\r\n        heap[index] = left;\r\n        heap[leftIndex] = node;\r\n        index = leftIndex;\r\n      }\r\n    } else if (rightIndex < length && compare(right, node) < 0) {\r\n      heap[index] = right;\r\n      heap[rightIndex] = node;\r\n      index = rightIndex;\r\n    } else {\r\n      // Neither child is smaller. Exit.\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nfunction compare(a, b) {\r\n  // Compare sort index first, then task id.\r\n  const diff = a.sortIndex - b.sortIndex;\r\n  return diff !== 0 ? diff : a.id - b.id;\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\n// TODO: Use symbols?\r\nexport const NoPriority = 0;\r\nexport const ImmediatePriority = 1;\r\nexport const UserBlockingPriority = 2;\r\nexport const NormalPriority = 3;\r\nexport const LowPriority = 4;\r\nexport const IdlePriority = 5;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {PriorityLevel} from './SchedulerPriorities';\r\nimport {enableProfiling} from './SchedulerFeatureFlags';\r\n\r\nlet runIdCounter: number = 0;\r\nlet mainThreadIdCounter: number = 0;\r\n\r\n// Bytes per element is 4\r\nconst INITIAL_EVENT_LOG_SIZE = 131072;\r\nconst MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\r\n\r\nlet eventLogSize = 0;\r\nlet eventLogBuffer = null;\r\nlet eventLog = null;\r\nlet eventLogIndex = 0;\r\n\r\nconst TaskStartEvent = 1;\r\nconst TaskCompleteEvent = 2;\r\nconst TaskErrorEvent = 3;\r\nconst TaskCancelEvent = 4;\r\nconst TaskRunEvent = 5;\r\nconst TaskYieldEvent = 6;\r\nconst SchedulerSuspendEvent = 7;\r\nconst SchedulerResumeEvent = 8;\r\n\r\nfunction logEvent(entries) {\r\n  if (eventLog !== null) {\r\n    const offset = eventLogIndex;\r\n    eventLogIndex += entries.length;\r\n    if (eventLogIndex + 1 > eventLogSize) {\r\n      eventLogSize *= 2;\r\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\r\n        // Using console['error'] to evade Babel and ESLint\r\n        console['error'](\r\n          \"Scheduler Profiling: Event log exceeded maximum size. Don't \" +\r\n            'forget to call `stopLoggingProfilingEvents()`.',\r\n        );\r\n        stopLoggingProfilingEvents();\r\n        return;\r\n      }\r\n      const newEventLog = new Int32Array(eventLogSize * 4);\r\n      newEventLog.set(eventLog);\r\n      eventLogBuffer = newEventLog.buffer;\r\n      eventLog = newEventLog;\r\n    }\r\n    eventLog.set(entries, offset);\r\n  }\r\n}\r\n\r\nexport function startLoggingProfilingEvents(): void {\r\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\r\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\r\n  eventLog = new Int32Array(eventLogBuffer);\r\n  eventLogIndex = 0;\r\n}\r\n\r\nexport function stopLoggingProfilingEvents(): ArrayBuffer | null {\r\n  const buffer = eventLogBuffer;\r\n  eventLogSize = 0;\r\n  eventLogBuffer = null;\r\n  eventLog = null;\r\n  eventLogIndex = 0;\r\n  return buffer;\r\n}\r\n\r\nexport function markTaskStart(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      // performance.now returns a float, representing milliseconds. When the\r\n      // event is logged, it's coerced to an int. Convert to microseconds to\r\n      // maintain extra degrees of precision.\r\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskCompleted(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskCanceled(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskErrored(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskRun(\r\n  task: {\r\n    id: number,\r\n    priorityLevel: PriorityLevel,\r\n    ...\r\n  },\r\n  ms: number,\r\n) {\r\n  if (enableProfiling) {\r\n    runIdCounter++;\r\n\r\n    if (eventLog !== null) {\r\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markTaskYield(task: {id: number, ...}, ms: number) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markSchedulerSuspended(ms: number) {\r\n  if (enableProfiling) {\r\n    mainThreadIdCounter++;\r\n\r\n    if (eventLog !== null) {\r\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\r\n    }\r\n  }\r\n}\r\n\r\nexport function markSchedulerUnsuspended(ms: number) {\r\n  if (enableProfiling) {\r\n    if (eventLog !== null) {\r\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\n/* eslint-disable no-var */\r\n\r\nimport {\r\n  enableSchedulerDebugging,\r\n  enableProfiling,\r\n  enableIsInputPending,\r\n  enableIsInputPendingContinuous,\r\n  frameYieldMs,\r\n  continuousYieldMs,\r\n  maxYieldMs,\r\n} from '../SchedulerFeatureFlags';\r\n\r\nimport {push, pop, peek} from '../SchedulerMinHeap';\r\n\r\n// TODO: Use symbols?\r\nimport {\r\n  ImmediatePriority,\r\n  UserBlockingPriority,\r\n  NormalPriority,\r\n  LowPriority,\r\n  IdlePriority,\r\n} from '../SchedulerPriorities';\r\nimport {\r\n  markTaskRun,\r\n  markTaskYield,\r\n  markTaskCompleted,\r\n  markTaskCanceled,\r\n  markTaskErrored,\r\n  markSchedulerSuspended,\r\n  markSchedulerUnsuspended,\r\n  markTaskStart,\r\n  stopLoggingProfilingEvents,\r\n  startLoggingProfilingEvents,\r\n} from '../SchedulerProfiling';\r\n\r\nlet getCurrentTime;\r\nconst hasPerformanceNow =\r\n  typeof performance === 'object' && typeof performance.now === 'function';\r\n\r\nif (hasPerformanceNow) {\r\n  const localPerformance = performance;\r\n  getCurrentTime = () => localPerformance.now();\r\n} else {\r\n  const localDate = Date;\r\n  const initialTime = localDate.now();\r\n  getCurrentTime = () => localDate.now() - initialTime;\r\n}\r\n\r\n// Max 31 bit integer. The max integer size in V8 for 32-bit systems.\r\n// Math.pow(2, 30) - 1\r\n// 0b111111111111111111111111111111\r\nvar maxSigned31BitInt = 1073741823;\r\n\r\n// Times out immediately\r\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1;\r\n// Eventually times out\r\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\r\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\r\nvar LOW_PRIORITY_TIMEOUT = 10000;\r\n// Never times out\r\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;\r\n\r\n// Tasks are stored on a min heap\r\nvar taskQueue = [];\r\nvar timerQueue = [];\r\n\r\n// Incrementing id counter. Used to maintain insertion order.\r\nvar taskIdCounter = 1;\r\n\r\n// Pausing the scheduler is useful for debugging.\r\nvar isSchedulerPaused = false;\r\n\r\nvar currentTask = null;\r\nvar currentPriorityLevel = NormalPriority;\r\n\r\n// This is set while performing work, to prevent re-entrance.\r\nvar isPerformingWork = false;\r\n\r\nvar isHostCallbackScheduled = false;\r\nvar isHostTimeoutScheduled = false;\r\n\r\n// Capture local references to native APIs, in case a polyfill overrides them.\r\nconst localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\r\nconst localClearTimeout =\r\n  typeof clearTimeout === 'function' ? clearTimeout : null;\r\nconst localSetImmediate =\r\n  typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\r\n\r\nconst isInputPending =\r\n  typeof navigator !== 'undefined' &&\r\n  navigator.scheduling !== undefined &&\r\n  navigator.scheduling.isInputPending !== undefined\r\n    ? navigator.scheduling.isInputPending.bind(navigator.scheduling)\r\n    : null;\r\n\r\nconst continuousOptions = {includeContinuous: enableIsInputPendingContinuous};\r\n\r\nfunction advanceTimers(currentTime) {\r\n  // Check for tasks that are no longer delayed and add them to the queue.\r\n  let timer = peek(timerQueue);\r\n  while (timer !== null) {\r\n    if (timer.callback === null) {\r\n      // Timer was cancelled.\r\n      pop(timerQueue);\r\n    } else if (timer.startTime <= currentTime) {\r\n      // Timer fired. Transfer to the task queue.\r\n      pop(timerQueue);\r\n      timer.sortIndex = timer.expirationTime;\r\n      push(taskQueue, timer);\r\n      if (enableProfiling) {\r\n        markTaskStart(timer, currentTime);\r\n        timer.isQueued = true;\r\n      }\r\n    } else {\r\n      // Remaining timers are pending.\r\n      return;\r\n    }\r\n    timer = peek(timerQueue);\r\n  }\r\n}\r\n\r\nfunction handleTimeout(currentTime) {\r\n  isHostTimeoutScheduled = false;\r\n  advanceTimers(currentTime);\r\n\r\n  if (!isHostCallbackScheduled) {\r\n    if (peek(taskQueue) !== null) {\r\n      isHostCallbackScheduled = true;\r\n      requestHostCallback(flushWork);\r\n    } else {\r\n      const firstTimer = peek(timerQueue);\r\n      if (firstTimer !== null) {\r\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction flushWork(hasTimeRemaining, initialTime) {\r\n  if (enableProfiling) {\r\n    markSchedulerUnsuspended(initialTime);\r\n  }\r\n\r\n  // We'll need a host callback the next time work is scheduled.\r\n  isHostCallbackScheduled = false;\r\n  if (isHostTimeoutScheduled) {\r\n    // We scheduled a timeout but it's no longer needed. Cancel it.\r\n    isHostTimeoutScheduled = false;\r\n    cancelHostTimeout();\r\n  }\r\n\r\n  isPerformingWork = true;\r\n  const previousPriorityLevel = currentPriorityLevel;\r\n  try {\r\n    if (enableProfiling) {\r\n      try {\r\n        return workLoop(hasTimeRemaining, initialTime);\r\n      } catch (error) {\r\n        if (currentTask !== null) {\r\n          const currentTime = getCurrentTime();\r\n          markTaskErrored(currentTask, currentTime);\r\n          currentTask.isQueued = false;\r\n        }\r\n        throw error;\r\n      }\r\n    } else {\r\n      // No catch in prod code path.\r\n      return workLoop(hasTimeRemaining, initialTime);\r\n    }\r\n  } finally {\r\n    currentTask = null;\r\n    currentPriorityLevel = previousPriorityLevel;\r\n    isPerformingWork = false;\r\n    if (enableProfiling) {\r\n      const currentTime = getCurrentTime();\r\n      markSchedulerSuspended(currentTime);\r\n    }\r\n  }\r\n}\r\n\r\nfunction workLoop(hasTimeRemaining, initialTime) {\r\n  let currentTime = initialTime;\r\n  advanceTimers(currentTime);\r\n  currentTask = peek(taskQueue);\r\n  while (\r\n    currentTask !== null &&\r\n    !(enableSchedulerDebugging && isSchedulerPaused)\r\n  ) {\r\n    if (\r\n      currentTask.expirationTime > currentTime &&\r\n      (!hasTimeRemaining || shouldYieldToHost())\r\n    ) {\r\n      // This currentTask hasn't expired, and we've reached the deadline.\r\n      break;\r\n    }\r\n    const callback = currentTask.callback;\r\n    if (typeof callback === 'function') {\r\n      currentTask.callback = null;\r\n      currentPriorityLevel = currentTask.priorityLevel;\r\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\r\n      if (enableProfiling) {\r\n        markTaskRun(currentTask, currentTime);\r\n      }\r\n      const continuationCallback = callback(didUserCallbackTimeout);\r\n      currentTime = getCurrentTime();\r\n      if (typeof continuationCallback === 'function') {\r\n        // If a continuation is returned, immediately yield to the main thread\r\n        // regardless of how much time is left in the current time slice.\r\n        currentTask.callback = continuationCallback;\r\n        if (enableProfiling) {\r\n          markTaskYield(currentTask, currentTime);\r\n        }\r\n        advanceTimers(currentTime);\r\n        return true;\r\n      } else {\r\n        if (enableProfiling) {\r\n          markTaskCompleted(currentTask, currentTime);\r\n          currentTask.isQueued = false;\r\n        }\r\n        if (currentTask === peek(taskQueue)) {\r\n          pop(taskQueue);\r\n        }\r\n        advanceTimers(currentTime);\r\n      }\r\n    } else {\r\n      pop(taskQueue);\r\n    }\r\n    currentTask = peek(taskQueue);\r\n  }\r\n  // Return whether there's additional work\r\n  if (currentTask !== null) {\r\n    return true;\r\n  } else {\r\n    const firstTimer = peek(timerQueue);\r\n    if (firstTimer !== null) {\r\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\r\n  switch (priorityLevel) {\r\n    case ImmediatePriority:\r\n    case UserBlockingPriority:\r\n    case NormalPriority:\r\n    case LowPriority:\r\n    case IdlePriority:\r\n      break;\r\n    default:\r\n      priorityLevel = NormalPriority;\r\n  }\r\n\r\n  var previousPriorityLevel = currentPriorityLevel;\r\n  currentPriorityLevel = priorityLevel;\r\n\r\n  try {\r\n    return eventHandler();\r\n  } finally {\r\n    currentPriorityLevel = previousPriorityLevel;\r\n  }\r\n}\r\n\r\nfunction unstable_next(eventHandler) {\r\n  var priorityLevel;\r\n  switch (currentPriorityLevel) {\r\n    case ImmediatePriority:\r\n    case UserBlockingPriority:\r\n    case NormalPriority:\r\n      // Shift down to normal priority\r\n      priorityLevel = NormalPriority;\r\n      break;\r\n    default:\r\n      // Anything lower than normal priority should remain at the current level.\r\n      priorityLevel = currentPriorityLevel;\r\n      break;\r\n  }\r\n\r\n  var previousPriorityLevel = currentPriorityLevel;\r\n  currentPriorityLevel = priorityLevel;\r\n\r\n  try {\r\n    return eventHandler();\r\n  } finally {\r\n    currentPriorityLevel = previousPriorityLevel;\r\n  }\r\n}\r\n\r\nfunction unstable_wrapCallback(callback) {\r\n  var parentPriorityLevel = currentPriorityLevel;\r\n  return function() {\r\n    // This is a fork of runWithPriority, inlined for performance.\r\n    var previousPriorityLevel = currentPriorityLevel;\r\n    currentPriorityLevel = parentPriorityLevel;\r\n\r\n    try {\r\n      return callback.apply(this, arguments);\r\n    } finally {\r\n      currentPriorityLevel = previousPriorityLevel;\r\n    }\r\n  };\r\n}\r\n\r\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\r\n  var currentTime = getCurrentTime();\r\n\r\n  var startTime;\r\n  if (typeof options === 'object' && options !== null) {\r\n    var delay = options.delay;\r\n    if (typeof delay === 'number' && delay > 0) {\r\n      startTime = currentTime + delay;\r\n    } else {\r\n      startTime = currentTime;\r\n    }\r\n  } else {\r\n    startTime = currentTime;\r\n  }\r\n\r\n  var timeout;\r\n  switch (priorityLevel) {\r\n    case ImmediatePriority:\r\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\r\n      break;\r\n    case UserBlockingPriority:\r\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\r\n      break;\r\n    case IdlePriority:\r\n      timeout = IDLE_PRIORITY_TIMEOUT;\r\n      break;\r\n    case LowPriority:\r\n      timeout = LOW_PRIORITY_TIMEOUT;\r\n      break;\r\n    case NormalPriority:\r\n    default:\r\n      timeout = NORMAL_PRIORITY_TIMEOUT;\r\n      break;\r\n  }\r\n\r\n  var expirationTime = startTime + timeout;\r\n\r\n  var newTask = {\r\n    id: taskIdCounter++,\r\n    callback,\r\n    priorityLevel,\r\n    startTime,\r\n    expirationTime,\r\n    sortIndex: -1,\r\n  };\r\n  if (enableProfiling) {\r\n    newTask.isQueued = false;\r\n  }\r\n\r\n  if (startTime > currentTime) {\r\n    // This is a delayed task.\r\n    newTask.sortIndex = startTime;\r\n    push(timerQueue, newTask);\r\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\r\n      // All tasks are delayed, and this is the task with the earliest delay.\r\n      if (isHostTimeoutScheduled) {\r\n        // Cancel an existing timeout.\r\n        cancelHostTimeout();\r\n      } else {\r\n        isHostTimeoutScheduled = true;\r\n      }\r\n      // Schedule a timeout.\r\n      requestHostTimeout(handleTimeout, startTime - currentTime);\r\n    }\r\n  } else {\r\n    newTask.sortIndex = expirationTime;\r\n    push(taskQueue, newTask);\r\n    if (enableProfiling) {\r\n      markTaskStart(newTask, currentTime);\r\n      newTask.isQueued = true;\r\n    }\r\n    // Schedule a host callback, if needed. If we're already performing work,\r\n    // wait until the next time we yield.\r\n    if (!isHostCallbackScheduled && !isPerformingWork) {\r\n      isHostCallbackScheduled = true;\r\n      requestHostCallback(flushWork);\r\n    }\r\n  }\r\n\r\n  return newTask;\r\n}\r\n\r\nfunction unstable_pauseExecution() {\r\n  isSchedulerPaused = true;\r\n}\r\n\r\nfunction unstable_continueExecution() {\r\n  isSchedulerPaused = false;\r\n  if (!isHostCallbackScheduled && !isPerformingWork) {\r\n    isHostCallbackScheduled = true;\r\n    requestHostCallback(flushWork);\r\n  }\r\n}\r\n\r\nfunction unstable_getFirstCallbackNode() {\r\n  return peek(taskQueue);\r\n}\r\n\r\nfunction unstable_cancelCallback(task) {\r\n  if (enableProfiling) {\r\n    if (task.isQueued) {\r\n      const currentTime = getCurrentTime();\r\n      markTaskCanceled(task, currentTime);\r\n      task.isQueued = false;\r\n    }\r\n  }\r\n\r\n  // Null out the callback to indicate the task has been canceled. (Can't\r\n  // remove from the queue because you can't remove arbitrary nodes from an\r\n  // array based heap, only the first one.)\r\n  task.callback = null;\r\n}\r\n\r\nfunction unstable_getCurrentPriorityLevel() {\r\n  return currentPriorityLevel;\r\n}\r\n\r\nlet isMessageLoopRunning = false;\r\nlet scheduledHostCallback = null;\r\nlet taskTimeoutID = -1;\r\n\r\n// Scheduler periodically yields in case there is other work on the main\r\n// thread, like user events. By default, it yields multiple times per frame.\r\n// It does not attempt to align with frame boundaries, since most tasks don't\r\n// need to be frame aligned; for those that do, use requestAnimationFrame.\r\nlet frameInterval = frameYieldMs;\r\nconst continuousInputInterval = continuousYieldMs;\r\nconst maxInterval = maxYieldMs;\r\nlet startTime = -1;\r\n\r\nlet needsPaint = false;\r\n\r\nfunction shouldYieldToHost() {\r\n  const timeElapsed = getCurrentTime() - startTime;\r\n  if (timeElapsed < frameInterval) {\r\n    // The main thread has only been blocked for a really short amount of time;\r\n    // smaller than a single frame. Don't yield yet.\r\n    return false;\r\n  }\r\n\r\n  // The main thread has been blocked for a non-negligible amount of time. We\r\n  // may want to yield control of the main thread, so the browser can perform\r\n  // high priority tasks. The main ones are painting and user input. If there's\r\n  // a pending paint or a pending input, then we should yield. But if there's\r\n  // neither, then we can yield less often while remaining responsive. We'll\r\n  // eventually yield regardless, since there could be a pending paint that\r\n  // wasn't accompanied by a call to `requestPaint`, or other main thread tasks\r\n  // like network events.\r\n  if (enableIsInputPending) {\r\n    if (needsPaint) {\r\n      // There's a pending paint (signaled by `requestPaint`). Yield now.\r\n      return true;\r\n    }\r\n    if (timeElapsed < continuousInputInterval) {\r\n      // We haven't blocked the thread for that long. Only yield if there's a\r\n      // pending discrete input (e.g. click). It's OK if there's pending\r\n      // continuous input (e.g. mouseover).\r\n      if (isInputPending !== null) {\r\n        return isInputPending();\r\n      }\r\n    } else if (timeElapsed < maxInterval) {\r\n      // Yield if there's either a pending discrete or continuous input.\r\n      if (isInputPending !== null) {\r\n        return isInputPending(continuousOptions);\r\n      }\r\n    } else {\r\n      // We've blocked the thread for a long time. Even if there's no pending\r\n      // input, there may be some other scheduled work that we don't know about,\r\n      // like a network event. Yield now.\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // `isInputPending` isn't available. Yield now.\r\n  return true;\r\n}\r\n\r\nfunction requestPaint() {\r\n  if (\r\n    enableIsInputPending &&\r\n    navigator !== undefined &&\r\n    navigator.scheduling !== undefined &&\r\n    navigator.scheduling.isInputPending !== undefined\r\n  ) {\r\n    needsPaint = true;\r\n  }\r\n\r\n  // Since we yield every frame regardless, `requestPaint` has no effect.\r\n}\r\n\r\nfunction forceFrameRate(fps) {\r\n  if (fps < 0 || fps > 125) {\r\n    // Using console['error'] to evade Babel and ESLint\r\n    console['error'](\r\n      'forceFrameRate takes a positive int between 0 and 125, ' +\r\n        'forcing frame rates higher than 125 fps is not supported',\r\n    );\r\n    return;\r\n  }\r\n  if (fps > 0) {\r\n    frameInterval = Math.floor(1000 / fps);\r\n  } else {\r\n    // reset the framerate\r\n    frameInterval = frameYieldMs;\r\n  }\r\n}\r\n\r\nconst performWorkUntilDeadline = () => {\r\n  if (scheduledHostCallback !== null) {\r\n    const currentTime = getCurrentTime();\r\n    // Keep track of the start time so we can measure how long the main thread\r\n    // has been blocked.\r\n    startTime = currentTime;\r\n    const hasTimeRemaining = true;\r\n\r\n    // If a scheduler task throws, exit the current browser task so the\r\n    // error can be observed.\r\n    //\r\n    // Intentionally not using a try-catch, since that makes some debugging\r\n    // techniques harder. Instead, if `scheduledHostCallback` errors, then\r\n    // `hasMoreWork` will remain true, and we'll continue the work loop.\r\n    let hasMoreWork = true;\r\n    try {\r\n      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\r\n    } finally {\r\n      if (hasMoreWork) {\r\n        // If there's more work, schedule the next message event at the end\r\n        // of the preceding one.\r\n        schedulePerformWorkUntilDeadline();\r\n      } else {\r\n        isMessageLoopRunning = false;\r\n        scheduledHostCallback = null;\r\n      }\r\n    }\r\n  } else {\r\n    isMessageLoopRunning = false;\r\n  }\r\n  // Yielding to the browser will give it a chance to paint, so we can\r\n  // reset this.\r\n  needsPaint = false;\r\n};\r\n\r\nlet schedulePerformWorkUntilDeadline;\r\nif (typeof localSetImmediate === 'function') {\r\n  // Node.js and old IE.\r\n  // There's a few reasons for why we prefer setImmediate.\r\n  //\r\n  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\r\n  // (Even though this is a DOM fork of the Scheduler, you could get here\r\n  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\r\n  // https://github.com/facebook/react/issues/20756\r\n  //\r\n  // But also, it runs earlier which is the semantic we want.\r\n  // If other browsers ever implement it, it's better to use it.\r\n  // Although both of these would be inferior to native scheduling.\r\n  schedulePerformWorkUntilDeadline = () => {\r\n    localSetImmediate(performWorkUntilDeadline);\r\n  };\r\n} else if (typeof MessageChannel !== 'undefined') {\r\n  // DOM and Worker environments.\r\n  // We prefer MessageChannel because of the 4ms setTimeout clamping.\r\n  const channel = new MessageChannel();\r\n  const port = channel.port2;\r\n  channel.port1.onmessage = performWorkUntilDeadline;\r\n  schedulePerformWorkUntilDeadline = () => {\r\n    port.postMessage(null);\r\n  };\r\n} else {\r\n  // We should only fallback here in non-browser environments.\r\n  schedulePerformWorkUntilDeadline = () => {\r\n    localSetTimeout(performWorkUntilDeadline, 0);\r\n  };\r\n}\r\n\r\nfunction requestHostCallback(callback) {\r\n  scheduledHostCallback = callback;\r\n  if (!isMessageLoopRunning) {\r\n    isMessageLoopRunning = true;\r\n    schedulePerformWorkUntilDeadline();\r\n  }\r\n}\r\n\r\nfunction requestHostTimeout(callback, ms) {\r\n  taskTimeoutID = localSetTimeout(() => {\r\n    callback(getCurrentTime());\r\n  }, ms);\r\n}\r\n\r\nfunction cancelHostTimeout() {\r\n  localClearTimeout(taskTimeoutID);\r\n  taskTimeoutID = -1;\r\n}\r\n\r\nexport {\r\n  ImmediatePriority as unstable_ImmediatePriority,\r\n  UserBlockingPriority as unstable_UserBlockingPriority,\r\n  NormalPriority as unstable_NormalPriority,\r\n  IdlePriority as unstable_IdlePriority,\r\n  LowPriority as unstable_LowPriority,\r\n  unstable_runWithPriority,\r\n  unstable_next,\r\n  unstable_scheduleCallback,\r\n  unstable_cancelCallback,\r\n  unstable_wrapCallback,\r\n  unstable_getCurrentPriorityLevel,\r\n  shouldYieldToHost as unstable_shouldYield,\r\n  requestPaint as unstable_requestPaint,\r\n  unstable_continueExecution,\r\n  unstable_pauseExecution,\r\n  unstable_getFirstCallbackNode,\r\n  getCurrentTime as unstable_now,\r\n  forceFrameRate as unstable_forceFrameRate,\r\n};\r\n\r\nexport const unstable_Profiling = enableProfiling\r\n  ? {\r\n      startLoggingProfilingEvents,\r\n      stopLoggingProfilingEvents,\r\n    }\r\n  : null;\r\n"],"names":["enableSchedulerDebugging","enableProfiling","frameYieldMs","push","heap","node","index","length","siftUp","peek","pop","first","last","siftDown","i","parentIndex","parent","compare","halfLength","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","markTaskErrored","task","ms","hasPerformanceNow","performance","now","localPerformance","getCurrentTime","localDate","Date","initialTime","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","setImmediate","isInputPending","navigator","scheduling","undefined","bind","advanceTimers","currentTime","timer","callback","startTime","expirationTime","handleTimeout","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","cancelHostTimeout","previousPriorityLevel","workLoop","error","isQueued","shouldYieldToHost","priorityLevel","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","apply","arguments","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","isSchedulerPaused","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","frameInterval","timeElapsed","requestPaint","forceFrameRate","fps","console","Math","floor","performWorkUntilDeadline","hasMoreWork","schedulePerformWorkUntilDeadline","MessageChannel","channel","port","port2","port1","onmessage","postMessage","unstable_Profiling"],"mappings":"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"}