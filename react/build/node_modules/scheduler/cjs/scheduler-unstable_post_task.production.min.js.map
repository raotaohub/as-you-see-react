{"version":3,"file":"scheduler-unstable_post_task.production.min.js","sources":["../../../../packages/scheduler/src/SchedulerPriorities.js","../../../../packages/scheduler/src/forks/SchedulerPostTask.js"],"sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nexport type PriorityLevel = 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\n// TODO: Use symbols?\r\nexport const NoPriority = 0;\r\nexport const ImmediatePriority = 1;\r\nexport const UserBlockingPriority = 2;\r\nexport const NormalPriority = 3;\r\nexport const LowPriority = 4;\r\nexport const IdlePriority = 5;\r\n","/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @flow\r\n */\r\n\r\nimport type {PriorityLevel} from '../SchedulerPriorities';\r\n\r\ndeclare class TaskController {\r\n  constructor(priority?: string): TaskController;\r\n  signal: mixed;\r\n  abort(): void;\r\n}\r\n\r\ntype PostTaskPriorityLevel = 'user-blocking' | 'user-visible' | 'background';\r\n\r\ntype CallbackNode = {\r\n  _controller: TaskController,\r\n};\r\n\r\nimport {\r\n  ImmediatePriority,\r\n  UserBlockingPriority,\r\n  NormalPriority,\r\n  LowPriority,\r\n  IdlePriority,\r\n} from '../SchedulerPriorities';\r\n\r\nexport {\r\n  ImmediatePriority as unstable_ImmediatePriority,\r\n  UserBlockingPriority as unstable_UserBlockingPriority,\r\n  NormalPriority as unstable_NormalPriority,\r\n  IdlePriority as unstable_IdlePriority,\r\n  LowPriority as unstable_LowPriority,\r\n};\r\n\r\n// Capture local references to native APIs, in case a polyfill overrides them.\r\nconst perf = window.performance;\r\nconst setTimeout = window.setTimeout;\r\n\r\n// Use experimental Chrome Scheduler postTask API.\r\nconst scheduler = global.scheduler;\r\n\r\nconst getCurrentTime = perf.now.bind(perf);\r\n\r\nexport const unstable_now = getCurrentTime;\r\n\r\n// Scheduler periodically yields in case there is other work on the main\r\n// thread, like user events. By default, it yields multiple times per frame.\r\n// It does not attempt to align with frame boundaries, since most tasks don't\r\n// need to be frame aligned; for those that do, use requestAnimationFrame.\r\nconst yieldInterval = 5;\r\nlet deadline = 0;\r\n\r\nlet currentPriorityLevel_DEPRECATED = NormalPriority;\r\n\r\n// `isInputPending` is not available. Since we have no way of knowing if\r\n// there's pending input, always yield at the end of the frame.\r\nexport function unstable_shouldYield(): boolean {\r\n  return getCurrentTime() >= deadline;\r\n}\r\n\r\nexport function unstable_requestPaint() {\r\n  // Since we yield every frame regardless, `requestPaint` has no effect.\r\n}\r\n\r\ntype SchedulerCallback<T> = (\r\n  didTimeout_DEPRECATED: boolean,\r\n) =>\r\n  | T\r\n  // May return a continuation\r\n  | SchedulerCallback<T>;\r\n\r\nexport function unstable_scheduleCallback<T>(\r\n  priorityLevel: PriorityLevel,\r\n  callback: SchedulerCallback<T>,\r\n  options?: {delay?: number},\r\n): CallbackNode {\r\n  let postTaskPriority;\r\n  switch (priorityLevel) {\r\n    case ImmediatePriority:\r\n    case UserBlockingPriority:\r\n      postTaskPriority = 'user-blocking';\r\n      break;\r\n    case LowPriority:\r\n    case NormalPriority:\r\n      postTaskPriority = 'user-visible';\r\n      break;\r\n    case IdlePriority:\r\n      postTaskPriority = 'background';\r\n      break;\r\n    default:\r\n      postTaskPriority = 'user-visible';\r\n      break;\r\n  }\r\n\r\n  const controller = new TaskController();\r\n  const postTaskOptions = {\r\n    priority: postTaskPriority,\r\n    delay: typeof options === 'object' && options !== null ? options.delay : 0,\r\n    signal: controller.signal,\r\n  };\r\n\r\n  const node = {\r\n    _controller: controller,\r\n  };\r\n\r\n  scheduler\r\n    .postTask(\r\n      runTask.bind(null, priorityLevel, postTaskPriority, node, callback),\r\n      postTaskOptions,\r\n    )\r\n    .catch(handleAbortError);\r\n\r\n  return node;\r\n}\r\n\r\nfunction runTask<T>(\r\n  priorityLevel: PriorityLevel,\r\n  postTaskPriority: PostTaskPriorityLevel,\r\n  node: CallbackNode,\r\n  callback: SchedulerCallback<T>,\r\n) {\r\n  deadline = getCurrentTime() + yieldInterval;\r\n  try {\r\n    currentPriorityLevel_DEPRECATED = priorityLevel;\r\n    const didTimeout_DEPRECATED = false;\r\n    const result = callback(didTimeout_DEPRECATED);\r\n    if (typeof result === 'function') {\r\n      // Assume this is a continuation\r\n      const continuation: SchedulerCallback<T> = (result: any);\r\n      const continuationController = new TaskController();\r\n      const continuationOptions = {\r\n        priority: postTaskPriority,\r\n        signal: continuationController.signal,\r\n      };\r\n      // Update the original callback node's controller, since even though we're\r\n      // posting a new task, conceptually it's the same one.\r\n      node._controller = continuationController;\r\n      scheduler\r\n        .postTask(\r\n          runTask.bind(\r\n            null,\r\n            priorityLevel,\r\n            postTaskPriority,\r\n            node,\r\n            continuation,\r\n          ),\r\n          continuationOptions,\r\n        )\r\n        .catch(handleAbortError);\r\n    }\r\n  } catch (error) {\r\n    // We're inside a `postTask` promise. If we don't handle this error, then it\r\n    // will trigger an \"Unhandled promise rejection\" error. We don't want that,\r\n    // but we do want the default error reporting behavior that normal\r\n    // (non-Promise) tasks get for unhandled errors.\r\n    //\r\n    // So we'll re-throw the error inside a regular browser task.\r\n    setTimeout(() => {\r\n      throw error;\r\n    });\r\n  } finally {\r\n    currentPriorityLevel_DEPRECATED = NormalPriority;\r\n  }\r\n}\r\n\r\nfunction handleAbortError(error) {\r\n  // Abort errors are an implementation detail. We don't expose the\r\n  // TaskController to the user, nor do we expose the promise that is returned\r\n  // from `postTask`. So we should suppress them, since there's no way for the\r\n  // user to handle them.\r\n}\r\n\r\nexport function unstable_cancelCallback(node: CallbackNode) {\r\n  const controller = node._controller;\r\n  controller.abort();\r\n}\r\n\r\nexport function unstable_runWithPriority<T>(\r\n  priorityLevel: PriorityLevel,\r\n  callback: () => T,\r\n): T {\r\n  const previousPriorityLevel = currentPriorityLevel_DEPRECATED;\r\n  currentPriorityLevel_DEPRECATED = priorityLevel;\r\n  try {\r\n    return callback();\r\n  } finally {\r\n    currentPriorityLevel_DEPRECATED = previousPriorityLevel;\r\n  }\r\n}\r\n\r\nexport function unstable_getCurrentPriorityLevel() {\r\n  return currentPriorityLevel_DEPRECATED;\r\n}\r\n\r\nexport function unstable_next<T>(callback: () => T): T {\r\n  let priorityLevel;\r\n  switch (currentPriorityLevel_DEPRECATED) {\r\n    case ImmediatePriority:\r\n    case UserBlockingPriority:\r\n    case NormalPriority:\r\n      // Shift down to normal priority\r\n      priorityLevel = NormalPriority;\r\n      break;\r\n    default:\r\n      // Anything lower than normal priority should remain at the current level.\r\n      priorityLevel = currentPriorityLevel_DEPRECATED;\r\n      break;\r\n  }\r\n\r\n  const previousPriorityLevel = currentPriorityLevel_DEPRECATED;\r\n  currentPriorityLevel_DEPRECATED = priorityLevel;\r\n  try {\r\n    return callback();\r\n  } finally {\r\n    currentPriorityLevel_DEPRECATED = previousPriorityLevel;\r\n  }\r\n}\r\n\r\nexport function unstable_wrapCallback<T>(callback: () => T): () => T {\r\n  const parentPriorityLevel = currentPriorityLevel_DEPRECATED;\r\n  return () => {\r\n    const previousPriorityLevel = currentPriorityLevel_DEPRECATED;\r\n    currentPriorityLevel_DEPRECATED = parentPriorityLevel;\r\n    try {\r\n      return callback();\r\n    } finally {\r\n      currentPriorityLevel_DEPRECATED = previousPriorityLevel;\r\n    }\r\n  };\r\n}\r\n\r\nexport function unstable_forceFrameRate() {}\r\n\r\nexport function unstable_pauseExecution() {}\r\n\r\nexport function unstable_continueExecution() {}\r\n\r\nexport function unstable_getFirstCallbackNode() {\r\n  return null;\r\n}\r\n\r\n// Currently no profiling build\r\nexport const unstable_Profiling = null;\r\n"],"names":["ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","perf","window","performance","setTimeout","scheduler","global","getCurrentTime","now","bind","unstable_now","yieldInterval","deadline","currentPriorityLevel_DEPRECATED","unstable_shouldYield","unstable_requestPaint","unstable_scheduleCallback","priorityLevel","callback","options","postTaskPriority","controller","TaskController","postTaskOptions","priority","delay","signal","node","_controller","postTask","runTask","catch","handleAbortError","didTimeout_DEPRECATED","result","continuation","continuationController","continuationOptions","error","unstable_cancelCallback","abort","unstable_runWithPriority","previousPriorityLevel","unstable_getCurrentPriorityLevel","unstable_next","unstable_wrapCallback","parentPriorityLevel","unstable_forceFrameRate","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_Profiling"],"mappings":"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"}